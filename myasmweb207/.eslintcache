[{"C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\index.js":"1","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\reportWebVitals.js":"2","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\App.js":"3","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Header\\header.js":"4","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Header\\Banner.js":"5","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Body\\Category.js":"6","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Body\\TopWatch.js":"7","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Body\\Introduction.jsx":"8","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Footer\\Foot.jsx":"9","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Home.jsx":"10","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\history.js":"11","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Adminstrator\\Porduct_manage.js":"12","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Adminstrator\\CreateProduct.js":"13","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\AdminProduct.jsx":"14","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\AdminCate.jsx":"15","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Admin.jsx":"16","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Adminstrator\\CreateCate.js":"17","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Adminstrator\\Cate_manage.js":"18","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\AdminOrder.jsx":"19","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Adminstrator\\Order_manage.js":"20","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Cart\\Cart.js":"21","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Cart\\Cart_manage.js":"22"},{"size":811,"mtime":1613768210052,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"24"},{"size":945,"mtime":1613973522670,"results":"26","hashOfConfig":"24"},{"size":1517,"mtime":1613973558831,"results":"27","hashOfConfig":"24"},{"size":271,"mtime":1611744506141,"results":"28","hashOfConfig":"24"},{"size":1100,"mtime":1613971768716,"results":"29","hashOfConfig":"24"},{"size":7837,"mtime":1613885309228,"results":"30","hashOfConfig":"24"},{"size":2511,"mtime":1611764669978,"results":"31","hashOfConfig":"24"},{"size":2764,"mtime":1611766975619,"results":"32","hashOfConfig":"24"},{"size":1955,"mtime":1613971927069,"results":"33","hashOfConfig":"24"},{"size":89,"mtime":1611900393402,"results":"34","hashOfConfig":"24"},{"size":10507,"mtime":1614011057811,"results":"35","hashOfConfig":"24"},{"size":7209,"mtime":1613962563492,"results":"36","hashOfConfig":"24"},{"size":3164,"mtime":1613886105497,"results":"37","hashOfConfig":"24"},{"size":2396,"mtime":1614234572362,"results":"38","hashOfConfig":"24"},{"size":2363,"mtime":1614312063933,"results":"39","hashOfConfig":"24"},{"size":5356,"mtime":1613894129047,"results":"40","hashOfConfig":"24"},{"size":9926,"mtime":1614306922192,"results":"41","hashOfConfig":"24"},{"size":2376,"mtime":1614453049458,"results":"42","hashOfConfig":"24"},{"size":7765,"mtime":1614452467194,"results":"43","hashOfConfig":"24"},{"size":2288,"mtime":1613828319396,"results":"44","hashOfConfig":"24"},{"size":9668,"mtime":1614456725788,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"mveh9h",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"48"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"48"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\index.js",[],["102","103"],"C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\reportWebVitals.js",[],"C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\App.js",[],"C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Header\\header.js",[],"C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Header\\Banner.js",[],"C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Body\\Category.js",[],"C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Body\\TopWatch.js",["104","105","106","107","108"],"import React from 'react'\r\nimport Untitled from '../image/Untitled.png';\r\nimport { Link } from \"react-router-dom\";\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\nimport { Button } from '@material-ui/core';\r\nimport {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\n\r\nfunction TopWatch({productsNam, productsNu , cart, setcart, formData}) {\r\n    const createNotification = (type) => {\r\n        return () => {\r\n          switch (type) {\r\n            case 'info':\r\n              NotificationManager.info('Info message');\r\n              break;\r\n            case 'success':\r\n              NotificationManager.success('Success ', 'Add To Card');\r\n              break;\r\n            case 'warning':\r\n              NotificationManager.warning('Warning message', 'Close after 3000ms', 3000);\r\n              break;\r\n            case 'error':\r\n              NotificationManager.error('Error message', 'Click me!', 5000, () => {\r\n                alert('callback');\r\n              });\r\n              break;\r\n          }\r\n        };\r\n      };\r\n    \r\n      const addToCart = async (event ,product) => {\r\n        // console.log(event.target);\r\n        // console.log(product);\r\n        if(cart.map( c => c.id).indexOf(product.id) != -1){ \r\n            console.log(\"đã tồn tại\");\r\n        }else{\r\n            console.log(\"chưa tồn tại\");\r\n            console.log(cart.map( c => c.id));\r\n            console.log(\"pro_id---\"+product.id);\r\n            console.log(\"kq---:  \"+cart.map( c => c.id).indexOf(product.id));\r\n            try {\r\n                const url = \"http://localhost:3040/cart\";\r\n                const response = await axios({\r\n                    method:'POST',\r\n                    url: url,\r\n                    data: {\r\n                        id: product.id,\r\n                        amount: 1,\r\n                    },\r\n                });\r\n                if(response.status && response.status == 201){\r\n                    console.log(response);\r\n                    console.log(\"thêm thành công rồi này\");\r\n                    setcart(...cart, response.data);\r\n                }\r\n            } catch (error) {\r\n                console.error(error)\r\n            }\r\n        }\r\n        \r\n    }\r\n    // console.log(\"đồng hồ nam\"+productsNam);\r\n    const aStyle1 = {\r\n        display: \"block\",\r\n        overflow: \"hidden\",\r\n        padding: \"5px 10px\",\r\n        border: \"1px solid #fff\",\r\n        float: \"right\",\r\n    }\r\n    const aStyle2 = {\r\n        display: \"block\",\r\n        overflow: \"hidden\",\r\n        padding: \"5px 10px\",\r\n        border: \"1px solid black\",\r\n        float: \"right\",\r\n    }\r\n    return (\r\n        <div>\r\n            <div class=\"w-4/5 mx-auto mt-20\">\r\n                <h1 class=\"text-center font-bold text-2xl font-serif\">TOP MEN'S WATCH</h1>\r\n                <div class=\"grid lg:grid-cols-4  border-t border-gray mt-2 pt-10 relative\">\r\n                    <div class=\"w-4/5   hidden sm:hidden md:hidden lg:block \">\r\n                        <div className=\"absolute top-28 left-20 text-white\">\r\n                            <h2 className=\"text-xl\">ĐỒNG HỒ NAM</h2>\r\n                            <Link to=\"\" style={aStyle1}>Xem tất cả ></Link>\r\n                        </div>\r\n                        <img class=\"ali\" src=\"https://cdn.tgdd.vn/v2015/Content/desktop/images/V5/category/fashion-watch-men-bg.png\" alt=\"\" />\r\n                    </div>\r\n                    <div class=\" lg:col-span-3 mx-auto grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-3 items-center text-center\">\r\n                    {productsNam.map((x, index) => \r\n                        (\r\n                            <div className=\" border border-gray-400 rounded-lg px-1 py-3\" key={index}>\r\n                                <div className=\"w-4/5 mx-auto my-1 \">\r\n                                    <img className=\"transition delay-750 duration-700 ease-in-out transform hover:scale-110\" src={x.image} alt=\"\"/>\r\n                                </div>\r\n                                <div className=\"\">\r\n                                    <p>{x.name}</p>\r\n                                </div>\r\n                                <div className=\"text-gray-500 text-xs\">\r\n                                    <span>{x.description}</span>\r\n                                </div>\r\n                                <div className=\"font-bold text-red-800\">\r\n                                    <p>{x.price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\")}VNĐ</p>\r\n                                </div>\r\n                                <div onClick={createNotification('success')}>\r\n                                    <Button startIcon={<AddShoppingCartIcon/>} color=\"secondary\" onClick={event => addToCart(event, x) }> Thêm vào giỏ hàng </Button>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    )}\r\n                    <NotificationContainer/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"w-full mt-20\">\r\n                <Link to=\"\"><img src={Untitled} alt=\"\"/></Link>\r\n            </div>\r\n            <div class=\"w-4/5 mx-auto mt-20\">\r\n                <h1 class=\"text-center font-bold text-2xl font-serif\">TOP WOMEN'S WATCH</h1>\r\n                <div class=\"grid lg:grid-cols-4  border-t border-gray mt-2 pt-10 \">\r\n                    <div class=\" lg:col-span-3 mx-auto grid grid-cols-1 sm:grid-cols-2 md:grid-cols-2 lg:grid-cols-4 gap-3 items-center text-center\">\r\n                    {productsNu.map((x) => \r\n                        (\r\n                            <div className=\" border border-gray-400 rounded-lg px-1 py-3\">\r\n                                <div className=\"w-4/5 mx-auto my-1 \">\r\n                                    <img className=\"transition delay-750 duration-700 ease-in-out transform hover:scale-110\" src={x.image} alt=\"\"/>\r\n                                </div>\r\n                                <div className=\"\">\r\n                                    <p>{x.name}</p>\r\n                                </div>\r\n                                <div className=\"text-gray-500 text-xs\">\r\n                                    <span>{x.description}</span>\r\n                                </div>\r\n                                <div className=\"font-bold text-red-800\">\r\n                                    <p>{x.price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\")}VNĐ</p>\r\n                                </div>\r\n                                <div onClick={createNotification('success')}>\r\n                                    <Button startIcon={<AddShoppingCartIcon/>} color=\"secondary\" onClick={event => addToCart(event, x)}> Thêm vào giỏ hàng </Button>\r\n                                    <NotificationContainer/>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                        )\r\n                    )}\r\n                    \r\n                    </div>\r\n                    <div class=\"w-4/5  ml-20 hidden sm:hidden md:hidden lg:block relative\">\r\n                        <div className=\"absolute top-28 right-20 text-black\">\r\n                            <h2 className=\"text-xl\">ĐỒNG HỒ NỮ</h2>\r\n                            <Link to=\"\" style={aStyle2} >Xem tất cả > </Link>\r\n                        </div>\r\n                        <Link to=\"\"><img class=\"ali\" src=\"https://cdn.tgdd.vn/v2015/Content/desktop/images/V5/category/fashion-watch-girl-bg.png\" alt=\"\"/></Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default TopWatch;\r\n","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Body\\Introduction.jsx",[],"C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Footer\\Foot.jsx",[],"C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Home.jsx",["109"],"// import Head from './Header/header';\r\nimport Banner from './Header/Banner';\r\nimport Category from './Body/Category';\r\nimport TopWatch from './Body/TopWatch';\r\nimport Introduce from './Body/Introduction';\r\nimport Foot from './Footer/Foot'; \r\nimport axios from 'axios';\r\nimport {useState, useEffect} from 'react';\r\nfunction Home(params) {\r\n  const initValue = [];\r\n  const [productnam, setproductsNam] = useState(initValue);\r\n  const [productnu, setproductsNu] = useState(initValue);\r\n  const [cates, setcates] = useState(initValue);\r\n  const [cart, setcart] = useState(initValue);\r\n  const [formData, setformData] = useState({\r\n      id: '',\r\n      amount : '',\r\n    });\r\n\r\n  useEffect(() => {\r\n      const urlNam = \"http://localhost:3040/product?cate_id_like=1&status=true\";\r\n      const urlNu = \"http://localhost:3040/product?cate_id_like=2&status=true\";\r\n      async function getProductNam(url) {\r\n        const {data} = await axios.get(url);\r\n        setproductsNam(data);\r\n      }\r\n      async function getProductNu(url) {\r\n        const {data} = await axios.get(url);\r\n        setproductsNu(data);\r\n      }\r\n      async function getcate() {\r\n        const {data} = await axios.get(\"http://localhost:3040/category?status=true\");\r\n        setcates(data);\r\n        console.log(data);\r\n      }\r\n      async function getcart() {\r\n        const {data} = await axios.get(`http://localhost:3040/cart`);\r\n        console.log(data);\r\n        setcart(data);\r\n        \r\n      }\r\n\r\n      getcate();\r\n      getProductNam(urlNam);\r\n      getProductNu(urlNu);\r\n      \r\n      // getProductforkey(search);\r\n      getcart();\r\n    }, []);\r\n\r\n  return(\r\n      <div class=\"w-full mx-auto\">\r\n      <Banner/>\r\n      <Category cate={cates}/>\r\n      <TopWatch productsNam={productnam} \r\n                productsNu={productnu}\r\n                cart= {cart}\r\n                formData = {formData}/>\r\n      <Introduce/>\r\n      <Foot/>\r\n    </div>\r\n  );\r\n}\r\nexport default Home;","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\history.js",[],["110","111"],"C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Adminstrator\\Porduct_manage.js",["112","113","114","115","116","117"],"import Table from '@material-ui/core/Table';\r\nimport React from 'react';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport {useState, useEffect} from 'react';\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    padding: '2px 4px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    width: 400,\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  },\r\n  divider: {\r\n    height: 28,\r\n    margin: 4,\r\n  },\r\n}));\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  });\r\n\r\nfunction Product_manage({product, setClickRow, setformData, setproduct,clickRow, cate }) {\r\n    const Swal = require('sweetalert2');\r\n    const [search, setsearch] = useState(\"\");\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n    const classes = useStyles();\r\n    const classes2 = useStyles2();\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n      setPage(newPage);\r\n    };\r\n  \r\n    const handleChangeRowsPerPage = (event) => {\r\n      setRowsPerPage(parseInt(event.target.value, 10));\r\n      setPage(0);\r\n    };\r\n    const onClickHanger = (event, value, index) => {\r\n        setClickRow(index);\r\n        setformData(value); // Truyền dữ liệu đẩy lên form\r\n    }\r\n    const Delete = (event,index) => {\r\n        event.stopPropagation();\r\n          Swal.fire({\r\n            title: 'Are you sure you want to delete this record?',\r\n            showDenyButton: true,\r\n            showCancelButton: false,\r\n            confirmButtonText: `Confirm`,\r\n            denyButtonText: `Cancel`,\r\n          }).then( async (result) => {\r\n            /* Read more about isConfirmed, isDenied below */\r\n            if (result.isConfirmed) {\r\n                //-------------------------\r\n                try {\r\n                    const url = `http://localhost:3040/product/${ product[index].id }`;\r\n                    const response = await axios.delete(url);\r\n                    // console.log(response);\r\n                    if (response.status && response.status == 200) {\r\n                        Swal.fire('Deleted!', '', 'success');\r\n                        setClickRow(-1);\r\n                        setformData({\r\n                            id: '',\r\n                            name: '',\r\n                            price: '',\r\n                            cate_id: '',\r\n                            status : true,\r\n                            quantity: '',\r\n                            image:'',\r\n                            description: ''\r\n                          });\r\n                    }\r\n                } catch (error) {\r\n                    console.error(error);\r\n                }\r\n                setproduct(product=[...product.slice(0, index),...product.slice(index+1, product.length)]);\r\n\r\n            } \r\n          })\r\n        setClickRow(clickRow=-1);\r\n    }\r\n\r\n    const foundCate = (cate , id) => {\r\n        return cate.find(x => x.id == id);\r\n    }\r\n    \r\n    const searchChange = (event) => {\r\n        setsearch(event.target.value.trim());\r\n    }\r\n    const fiterProduct = product.filter( p => \r\n      { return (p.name.toLowerCase().indexOf(search.toLowerCase()) !== -1) \r\n        || (p.description.toLowerCase().indexOf(search.toLowerCase()) !== -1)\r\n        || (foundCate(cate, p.cate_id).category_name.toLowerCase().indexOf(search.toLowerCase()) !== -1)\r\n      });\r\n    // đổi Trạng thái hoạt động\r\n    const handleChangeDense = (event, index) => {\r\n      // event.stopPropagation();\r\n      // setDense(event.target.checked);\r\n      const rowUpdate = {...product[index],status : event.target.checked };\r\n      setformData({\r\n        id: '',\r\n        name: '',\r\n        price: '',\r\n        cate_id: '',\r\n        status : true,\r\n        quantity: '',\r\n        image:'',\r\n        description: ''\r\n      });\r\n      \r\n      Swal.fire({\r\n        title: 'Are you sure you want to change active status of this Product ?',\r\n        showDenyButton: true,\r\n        showCancelButton: false,\r\n        confirmButtonText: `Confirm`,\r\n        denyButtonText: `Cancel`,\r\n      }).then( async (result) => {\r\n        /* Read more about isConfirmed, isDenied below */\r\n        if (result.isConfirmed) {\r\n            //-------------------------\r\n            try {\r\n                const url = `http://localhost:3040/product/${ rowUpdate.id }`;\r\n                const response = await axios.put(url,rowUpdate);\r\n                console.log(response);\r\n                if (response.status && response.status == 200) {\r\n                    Swal.fire('Update successfully!', '', 'success');\r\n                }\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n            // setcate(cate=[...cate.slice(0, index),rowUpdate,...cate.slice(index+1, cate.length)]);\r\n            setproduct(product=[...product.slice(0, index),rowUpdate,...product.slice(index+1, product.length)]);\r\n        } \r\n      })\r\n    };\r\n    // console.log(\"filter product\");\r\n    // console.log(fiterProduct);\r\n    return(\r\n        <div>\r\n            <center>\r\n            <Paper component=\"form\" className={classes2.root}>\r\n            \r\n            <InputBase\r\n                className={classes2.input}\r\n                placeholder=\"Search Product\"\r\n                inputProps={{ 'aria-label': 'search google maps' }}\r\n                onChange={ searchChange }\r\n            />\r\n            <IconButton type=\"submit\" className={classes2.iconButton} aria-label=\"search\" >\r\n                <SearchIcon />\r\n            </IconButton>\r\n            \r\n            </Paper>\r\n            </center>\r\n            <br/>\r\n            <TableContainer component={Paper}>\r\n            <Table className={classes.table} aria-label=\"simple table\">\r\n                <TableHead>\r\n                <TableRow>\r\n                <TableCell align=\"center\">NO.</TableCell>\r\n                <TableCell align=\"left\">NAME</TableCell>\r\n                <TableCell align=\"center\">IMAGE</TableCell>\r\n                <TableCell align=\"left\">DESCRIPTION</TableCell>\r\n                <TableCell align=\"left\">PRICE</TableCell>\r\n                <TableCell align=\"left\">QUANTITY</TableCell>\r\n                <TableCell align=\"left\">VISIBLE</TableCell>\r\n                <TableCell align=\"center\">CATEGORY</TableCell>\r\n                <TableCell align=\"center\">ACTION</TableCell>\r\n                </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                {product.filter( p => \r\n                                  { return (p.name.toLowerCase().indexOf(search.toLowerCase()) !== -1) \r\n                                    || (p.description.toLowerCase().indexOf(search.toLowerCase()) !== -1)\r\n                                    || (foundCate(cate, p.cate_id).category_name.toLowerCase().indexOf(search.toLowerCase()) !== -1)\r\n                                  }\r\n                                )\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  return (\r\n                    <TableRow key={row.id} onClick={event => onClickHanger(event, row, page * rowsPerPage + index)}> \r\n                      <TableCell align=\"center\">{page * rowsPerPage + index +1}</TableCell>\r\n                      <TableCell align=\"left\"> {row.name}</TableCell>\r\n                      <TableCell align=\"center\" ><center><img src={row.image} className=\"h-16\"/></center></TableCell>\r\n                      <TableCell align=\"left\" >{row.description}</TableCell>\r\n                      <TableCell align=\"left\" >{row.price}</TableCell>\r\n                      <TableCell align=\"left\" >{row.quantity}</TableCell>\r\n                      <TableCell align=\"left\" >\r\n                        <FormControlLabel\r\n                            control={<Switch checked={row.status} onChange={event => handleChangeDense(event, index+ page * rowsPerPage)} />}\r\n                            label=\"Activate\"\r\n                          />\r\n                        {/* <span className=\"text-green-600\">{(row.status)?\"TRUE\":\"\"}</span><span className=\"text-red-600\">{(row.status)?\"\":\"FALSE\"}</span> */}\r\n                     </TableCell>\r\n                      <TableCell align=\"center\" >{(foundCate(cate, row.cate_id))?foundCate(cate, row.cate_id).category_name : \"Danh mục không tồn tại\"}</TableCell>\r\n                      <TableCell align=\"center\">\r\n                          <Button variant=\"contained\" color=\"secondary\" onClick={event => Delete(event, page * rowsPerPage + index)}>Delete</Button>\r\n                      </TableCell>\r\n                      </TableRow>\r\n              \r\n                  );\r\n                })}\r\n                \r\n                </TableBody>\r\n            </Table>\r\n            <center className=\"text-red-600\">{(fiterProduct.length == 0)?\"There are no record!\":\"\"}</center>\r\n            <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                component=\"div\"\r\n                count={product.filter( p => \r\n                  { return (p.name.toLowerCase().indexOf(search.toLowerCase()) !== -1) \r\n                    || (p.description.toLowerCase().indexOf(search.toLowerCase()) !== -1)\r\n                    || (foundCate(cate, p.cate_id).category_name.toLowerCase().indexOf(search.toLowerCase()) !== -1)\r\n                  }\r\n                ).length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n            </TableContainer>\r\n            <div className=\"pb-32\"></div>\r\n        </div>\r\n    );\r\n}\r\nexport default Product_manage;","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Adminstrator\\CreateProduct.js",["118","119","120","121","122","123"],"// import { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios';\r\nimport {useState} from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Select from '@material-ui/core/Select';\r\nimport Container from '@material-ui/core/Container';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\n\r\nfunction CreateProduct({clickRow,formData, setformData,setproduct,product,setClickRow, cate, setcate}) {\r\n    const classes = useStyles();\r\n    const CatehandleChange = (event) => {\r\n        setformData({...formData,cate_id:event.target.value});\r\n    };\r\n    const Swal = require('sweetalert2');\r\n    const [fileUpload, setfileUpload] = useState(null);\r\n    // const [fileUpload, setfileUpload] = useState(null);\r\n    \r\n    const handleChangeDense = (event) => {\r\n        setformData({...formData,status: event.target.checked});\r\n        // console.log(event.target.checked);\r\n      };\r\n    const onSubmitHanger = async (event) => {\r\n        event.preventDefault(); // không load lại trang\r\n        if(clickRow != -1){ // cập nhật thông tin\r\n            try {\r\n                const url = `http://localhost:3040/product/${formData.id}`;\r\n                const response = await axios({\r\n                    method:'PUT',\r\n                    url: url,\r\n                    data: formData,\r\n                });\r\n                if(response.status && response.status == 200){\r\n                    setproduct(product=[...product.slice(0, clickRow),formData, ...product.slice(clickRow+1, product.length)]); // set lại Products\r\n                    Swal.fire('Update successfully!', '', 'success');\r\n                    // console.log(\"product : \");\r\n                    // console.log(product);\r\n                }\r\n            } catch (error) {\r\n                console.error(error)\r\n            }\r\n            \r\n        }else{\r\n            // console.log(\"Click row onsubmit: == -1 \",clickRow);\r\n            //Thêm một dòng mới\r\n            try {\r\n                const url = `http://localhost:3040/product`;\r\n                const response = await axios({\r\n                    method:'POST',\r\n                    url: url,\r\n                    data: formData,\r\n                });\r\n                if(response.status && response.status == 201){\r\n                    // console.log(response);\r\n                    setproduct(product=[...product, response.data]); // set lại Products\r\n                    Swal.fire('Create new record successfully!', '', 'success');\r\n                    myClickClear();\r\n                }\r\n            } catch (error) {\r\n                console.error(error)\r\n            }\r\n        }\r\n        \r\n    }\r\n    \r\n\r\n    const imageHandler = (event) => {\r\n        const reader = new FileReader();\r\n        reader.onload = () => {\r\n            if(reader.readyState){\r\n                setfileUpload(reader.result);  \r\n                setformData({...formData,image:reader.result});              \r\n            }\r\n        }\r\n        reader.readAsDataURL(event.target.files[0]);\r\n    }\r\n    const myChangeHandler = (event) => {\r\n        const {name,value} = event.target;\r\n        setformData({...formData,[name]:value});\r\n        // console.log(formData);\r\n    }\r\n    // const maxID = Math.max.apply(Math, product.map(x => x.id));\r\n\r\n    const myClickClear = (event) => {\r\n        setClickRow(-1);\r\n        setformData({\r\n            id: '',\r\n            name: '',\r\n            price: '',\r\n            cate_id: '',\r\n            status : true,\r\n            quantity: '',\r\n            image:'',\r\n            description: ''\r\n          });\r\n    }\r\n\r\n    \r\n    const divStyle = {\r\n       height: '5px',\r\n       width:'100%',\r\n      };\r\n\r\n    \r\n    // onChange={ myChangeHandler}\r\n    return(\r\n        <div>\r\n            <form onSubmit={onSubmitHanger} encType=\"multipart/form-data\">\r\n                <TextField fullWidth variant=\"filled\" label=\"id\" name=\"id\" disabled=\"true\"\r\n                    value={formData.id} \r\n                    onChange={ myChangeHandler}/>\r\n                <TextField fullWidth variant=\"filled\" label=\"name\"  name=\"name\" \r\n                    value={formData.name}\r\n                    onChange={ myChangeHandler}/>\r\n                <TextField fullWidth variant=\"filled\" label=\"description\" name=\"description\" \r\n                    value={formData.description} \r\n                    onChange={ myChangeHandler}/>\r\n                <TextField fullWidth variant=\"filled\" label=\"price\"  name=\"price\" \r\n                    value={formData.price}\r\n                    onChange={ myChangeHandler}/>\r\n                <TextField fullWidth variant=\"filled\" label=\"quantity\" name=\"quantity\" \r\n                    value={formData.quantity} \r\n                    onChange={ myChangeHandler}/>\r\n                    <FormControlLabel\r\n                        control={<Switch checked={formData.status} onChange={handleChangeDense} />}\r\n                        label=\"Activate\"\r\n                    />\r\n                    <span className=\"ml-8\">   </span>\r\n                    <FormControl className={classes.formControl}>\r\n                        <InputLabel id=\"demo-simple-select-label\">Category</InputLabel>\r\n                        <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        value={formData.cate_id}\r\n                        onChange={CatehandleChange}\r\n                        >\r\n                        {cate.map((value, index) => (\r\n                            <MenuItem key={index} value={value.id} >{value.category_name}</MenuItem>\r\n                        ))}\r\n                        \r\n                        </Select>\r\n                    </FormControl>\r\n                    \r\n                    <div>\r\n\r\n                        <Button variant=\"contained\" component=\"label\"  >\r\n                            Upload File\r\n                            <input type=\"file\" hidden name=\"image\" accept=\"image/*\" onChange={imageHandler}/>\r\n                        </Button>\r\n                        <center><img src={formData.image} width=\"400px\" className=\"rounded-2xl\"/></center>\r\n                        \r\n                    </div>\r\n                    <div style={divStyle}></div>\r\n                    <Button variant=\"contained\" color=\"secondary\" type=\"submit\">SUBMIT</Button>\r\n                    <span className=\"mr-12\">   </span>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={myClickClear} >Clear Form</Button>\r\n                \r\n            </form>\r\n            <br></br>\r\n        </div>\r\n    );\r\n}\r\nexport default CreateProduct;","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\AdminProduct.jsx",["124","125","126","127","128","129","130","131","132","133","134"],"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport {useState, useEffect} from 'react';\r\nimport Product from './Adminstrator/Porduct_manage';\r\nimport CreateProduct from './Adminstrator/CreateProduct';\r\nimport Container from '@material-ui/core/Container';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport CollectionsBookmarkIcon from '@material-ui/icons/CollectionsBookmark';\r\nimport WatchIcon from '@material-ui/icons/Watch';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\n// import { confirmAlert } from 'react-confirm-alert';\r\n\r\n// import Swal from 'sweetalert2/dist/sweetalert2.js';\r\n// import 'sweetalert2/src/sweetalert2.scss'\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  });\r\n\r\n\r\nfunction AdminProduct() {\r\n    \r\n    const initValue = [];\r\n    const [product, setproducts] = useState(initValue);\r\n    const [cate, setcate] = useState(initValue);\r\n    const [clickRow, setClickRow] = useState(-1);\r\n    const [formData, setformData] = useState({\r\n    id: '',\r\n    name: '',\r\n    price: '',\r\n    cate_id: '',\r\n    status : true,\r\n    quantity: '',\r\n    image:'',\r\n    description: '',\r\n  });\r\nuseEffect(() => {\r\n    async function getProduct() {\r\n      const {data : x} = await axios.get(\"http://localhost:3040/product\");\r\n      setproducts(x);\r\n    }\r\n    // async function getProductforkey(key) {\r\n    //   const {data } = await axios.get(`http://localhost:3040/product?name_like=${key}`);\r\n    //   console.log(\"search\"+search);\r\n    //   setproducts(data);\r\n    // }\r\n    async function getCate() {\r\n      const {data} = await axios.get(\"http://localhost:3040/category\");\r\n      setcate(data);\r\n    }\r\n    // getProductforkey(search);\r\n    getProduct();\r\n    getCate();\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n  const divStyle = {\r\n    height: '5px',\r\n    width:'100%',\r\n   };\r\n    return(\r\n        <div>\r\n            {/* <div className=\"h-28\"></div> */}\r\n            <Container maxWidth=\"md\">\r\n            <div style={divStyle}></div>\r\n            <CreateProduct \r\n                clickRow={clickRow} \r\n                formData={formData} \r\n                setformData={setformData}\r\n                setproduct={setproducts}\r\n                product={product}\r\n                setClickRow ={setClickRow}\r\n                cate = {cate}\r\n                setcate = {setcate}\r\n            />\r\n            </Container>\r\n            <Container maxWidth=\"lg\">\r\n            < Product \r\n                product={product}\r\n                setproduct={setproducts}\r\n                setformData={setformData} // set giá trị cho form hiển thị\r\n                setClickRow ={setClickRow}\r\n                clickRow={clickRow}\r\n                cate = {cate}\r\n                setcate = {setcate}\r\n                \r\n            />\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\nexport default AdminProduct;","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\AdminCate.jsx",["135"],"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport {useState, useEffect} from 'react';\r\nimport Cates from './Adminstrator/Cate_manage';\r\nimport CreateCate from './Adminstrator/CreateCate';\r\nimport Container from '@material-ui/core/Container';\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n// import { confirmAlert } from 'react-confirm-alert';\r\n\r\n// import Swal from 'sweetalert2/dist/sweetalert2.js';\r\n// import 'sweetalert2/src/sweetalert2.scss'\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  });\r\n\r\n\r\nfunction AdminCate() {\r\n    \r\n    const initValue = [];\r\n    const [cate, setcate] = useState(initValue);\r\n    const [product, setproduct] = useState(initValue);\r\n    const [clickRow, setClickRow] = useState(-1);\r\n    const [formData, setformData] = useState({\r\n    id: '',\r\n    category_name: '',\r\n    status : true,\r\n    image: '',\r\n  });\r\nuseEffect(() => {\r\n\r\n    async function getCate() {\r\n      const {data} = await axios.get(`http://localhost:3040/category`);\r\n      setcate(data);\r\n    }\r\n\r\n    async function getProduct() {\r\n      const {data : x} = await axios.get(\"http://localhost:3040/product\");\r\n      setproduct(x);\r\n    }\r\n    // getProductforkey(search);\r\n    getCate();\r\n    getProduct();\r\n  }, []);\r\n\r\n  const divStyle = {\r\n    height: '5px',\r\n    width:'100%',\r\n   };\r\n    return(\r\n        <div>\r\n            <Router>\r\n            {/* <div className=\"h-28\"></div> */}\r\n            <Container maxWidth=\"md\">\r\n            <div style={divStyle}></div>\r\n            <CreateCate \r\n                clickRow={clickRow} \r\n                formData={formData} \r\n                setformData={setformData}\r\n                setClickRow ={setClickRow}\r\n                cate = {cate}\r\n                setcate = {setcate}\r\n            />\r\n            < Cates \r\n                setformData={setformData} // set giá trị cho form hiển thị\r\n                setClickRow ={setClickRow}\r\n                clickRow={clickRow}\r\n                cate = {cate}\r\n                setcate = {setcate}\r\n                product = {product}\r\n            />\r\n            </Container>\r\n            {/* <Route path=\"/admin\" component={Admin}/>\r\n          <Route path=\"/\" component={Home} exact={true}/> */}\r\n            </Router>\r\n        </div>\r\n    );\r\n}\r\nexport default AdminCate;","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Admin.jsx",[],"C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Adminstrator\\CreateCate.js",["136","137","138","139","140","141","142","143","144","145","146","147","148"],"// import { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\n\r\nfunction CreateCate({clickRow, setClickRow,formData, setformData, cate, setcate}) {\r\n    const classes = useStyles();\r\n    const CatehandleChange = (event) => {\r\n        setformData({...formData,cate_id:event.target.value});\r\n    };\r\n    const Swal = require('sweetalert2');\r\n    const onSubmitHanger = async (event) => {\r\n        event.preventDefault(); // không load lại trang\r\n        if(clickRow != -1){ // cập nhật thông tin\r\n            try {\r\n                const url = `http://localhost:3040/category/${formData.id}`;\r\n                const response = await axios({\r\n                    method:'PUT',\r\n                    url: url,\r\n                    data: formData,\r\n                });\r\n                // axios.put(url, formData)\r\n                // .then((result)=>{\r\n                //     console.log(result);\r\n                // })\r\n                if(response.status && response.status == 200){\r\n                    setcate(cate=[...cate.slice(0, clickRow),formData, ...cate.slice(clickRow+1, cate.length)]); // set lại Products\r\n                    Swal.fire('Update successfully!', '', 'success');\r\n                }\r\n            } catch (error) {\r\n                console.error(error)\r\n            }\r\n            \r\n        }else{\r\n            console.log(\"Click row onsubmit: == -1 \",clickRow);\r\n            //Thêm một dòng mới\r\n            try {\r\n                const url = \"http://localhost:3040/category\";\r\n                const response = await axios({\r\n                    method:'POST',\r\n                    url: url,\r\n                    data: formData,\r\n                });\r\n                if(response.status && response.status == 201){\r\n                    // console.log(response);\r\n                    setcate(cate=[...cate, response.data]); // set lại Products\r\n                    Swal.fire('Create new record successfully!', '', 'success');\r\n                }\r\n            } catch (error) {\r\n                console.error(error)\r\n            }\r\n        }\r\n        \r\n    }\r\n    \r\n\r\n    const myChangeHandler = (event) => {\r\n        const {name,value} = event.target;\r\n        setformData({...formData,[name]:value});\r\n        // console.log(formData);\r\n    }\r\n    const maxID = Math.max.apply(Math, cate.map(x => x.id));\r\n\r\n    const myClickClear = (event) => {\r\n        setClickRow(-1);\r\n        setformData({\r\n            id: maxID+1,\r\n            category_name: '',\r\n            status : true,\r\n            image: \"\"\r\n          });\r\n    }\r\n\r\n    const handleChangeDense = (event) => {\r\n        // setDense(event.target.checked);\r\n        setformData({...formData,status: event.target.checked});\r\n        console.log(event.target.checked);\r\n      };\r\n\r\n    const divStyle = {\r\n       height: '5px',\r\n       width:'100%',\r\n      };\r\n\r\n    const imageHandler = (event) => {\r\n        const reader = new FileReader();\r\n        reader.onload = () => {\r\n            if(reader.readyState){\r\n                // setfileUpload(reader.result);  \r\n                setformData({...formData,image:reader.result});              \r\n            }\r\n        }\r\n        reader.readAsDataURL(event.target.files[0]);\r\n    }\r\n    \r\n\r\n    \r\n    // onChange={ myChangeHandler}\r\n    return(\r\n        <div>\r\n            <form onSubmit={onSubmitHanger} >\r\n                <TextField fullWidth variant=\"filled\" label=\"Category_id\" name=\"id\" \r\n                    value={formData.id} \r\n                    onChange={ myChangeHandler}/>\r\n                <TextField fullWidth variant=\"filled\" label=\"Category_name\"  name=\"category_name\" \r\n                    value={formData.category_name}\r\n                    onChange={ myChangeHandler}/>\r\n                <span className=\"ml-8\">   </span>\r\n                    \r\n                <div>\r\n\r\n                    <Button variant=\"contained\" component=\"label\"  >\r\n                        Upload File\r\n                        <input type=\"file\" hidden name=\"image\" accept=\"image/*\" onChange={imageHandler}/>\r\n                    </Button>\r\n                    <center><img src={formData.image} width=\"400px\" className=\"rounded-2xl\"/></center>\r\n                    \r\n                </div>\r\n                <div style={divStyle}></div>\r\n                <Button variant=\"contained\" color=\"secondary\" type=\"submit\">SUBMIT</Button>\r\n                <span className=\"mr-12\">   </span>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={myClickClear} >Clear Form</Button>\r\n            </form>\r\n            <br></br>\r\n        </div>\r\n    );\r\n}\r\nexport default CreateCate;","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Adminstrator\\Cate_manage.js",["149","150","151","152","153","154","155","156","157"],"import Table from '@material-ui/core/Table';\r\nimport React from 'react';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {useState, useEffect} from 'react';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    padding: '2px 4px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    width: 400,\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  },\r\n  divider: {\r\n    height: 28,\r\n    margin: 4,\r\n  },\r\n}));\r\n// import {useState, useEffect} from 'react';\r\n\r\n// import { confirmAlert } from 'react-confirm-alert';\r\n\r\n// import Swal from 'sweetalert2/dist/sweetalert2.js';\r\n// import 'sweetalert2/src/sweetalert2.scss';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  });\r\n  function stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n      const order = comparator(a[0], b[0]);\r\n      if (order !== 0) return order;\r\n      return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n  }\r\n  function getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n      ? (a, b) => descendingComparator(a, b, orderBy)\r\n      : (a, b) => -descendingComparator(a, b, orderBy);\r\n  }\r\n\r\n  function descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n\r\n\r\n\r\nfunction Product_manage({ setClickRow, setformData,clickRow, cate, setcate, product }) {\r\n    const Swal = require('sweetalert2');\r\n    const [search, setsearch] = useState(\"\");\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n    const classes = useStyles();\r\n    const classes2 = useStyles2();\r\n    const onClickHanger = (event, value, index) => {\r\n        setClickRow(index);\r\n        setformData(value); // Truyền dữ liệu đẩy lên form\r\n    }\r\n    const Delete = (event,index) => {\r\n        event.stopPropagation();\r\n          Swal.fire({\r\n            title: 'Are you sure you want to delete this record?',\r\n            showDenyButton: true,\r\n            showCancelButton: false,\r\n            confirmButtonText: `Confirm`,\r\n            denyButtonText: `Cancel`,\r\n          }).then( async (result) => {\r\n            /* Read more about isConfirmed, isDenied below */\r\n            if (result.isConfirmed) {\r\n                //-------------------------\r\n                try {\r\n                    const url = `http://localhost:3040/category/${ cate[index].id }`;\r\n                    const response = await axios.delete(url);\r\n                    console.log(response);\r\n                    if (response.status && response.status == 200) {\r\n                        Swal.fire('Deleted!', '', 'success');\r\n                    }\r\n                } catch (error) {\r\n                    console.error(error);\r\n                }\r\n\r\n                setcate(cate=[...cate.slice(0, index),...cate.slice(index+1, cate.length)]);\r\n                \r\n            } \r\n          })\r\n        setClickRow(clickRow=-1);\r\n    }\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n      setRowsPerPage(parseInt(event.target.value, 10));\r\n      setPage(0);\r\n    };\r\n    const handleChangePage = (event, newPage) => {\r\n      setPage(newPage);\r\n    };\r\n    \r\n    const searchChange = (event) => {\r\n        setsearch(event.target.value);\r\n    }\r\n    // đổi Trạng thái hoạt động\r\n    const handleChangeDense = (event, index) => {\r\n      // event.stopPropagation();\r\n      // setDense(event.target.checked);\r\n      const rowUpdate = {...cate[index],status : event.target.checked };\r\n      setformData({\r\n        id: '',\r\n        category_name: '',\r\n        status : true,\r\n        image: '',\r\n      });\r\n      \r\n      Swal.fire({\r\n        title: 'Are you sure you want to change active status of this Category ?',\r\n        showDenyButton: true,\r\n        showCancelButton: false,\r\n        confirmButtonText: `Confirm`,\r\n        denyButtonText: `Cancel`,\r\n      }).then( async (result) => {\r\n        /* Read more about isConfirmed, isDenied below */\r\n        if (result.isConfirmed) {\r\n            //-------------------------\r\n            try {\r\n                const url = `http://localhost:3040/category/${ rowUpdate.id }`;\r\n                const response = await axios.put(url,rowUpdate);\r\n                console.log(response);\r\n                if (response.status && response.status == 200) {\r\n                    Swal.fire('Update successfully!', '', 'success');\r\n                }\r\n                // thay đổi status của sản phẩm thuộc danh mục này\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n            \r\n            setcate(cate=[...cate.slice(0, index),rowUpdate,...cate.slice(index+1, cate.length)]);\r\n            ChangeStatusProductFromCate(cate[index].id, rowUpdate.status);\r\n        } \r\n      })\r\n    };\r\n\r\n    const ChangeStatusProductFromCate = (idCate, statusChange) => {\r\n      // get list product from idcate\r\n      const listProductChange = product.filter( element => element.cate_id == idCate);\r\n      listProductChange.map( async (product, index) => {\r\n        console.log(product.id);\r\n        try {\r\n          const url = `http://localhost:3040/product/${ product.id }`;\r\n          const response = await axios.put(url,{...product, status: statusChange});\r\n          console.log(response);\r\n          if (response.status && response.status == 200) {\r\n              // Swal.fire(`Update ${index+1} successfully!`, '', 'success');\r\n              console.log(`Update ${index+1} successfully!`);\r\n          }\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n      })\r\n    }\r\n\r\n    const fitercate = cate.filter( cate => {\r\n        return cate.category_name.toLowerCase().indexOf(search.toLowerCase()) !== -1\r\n    });\r\n    return(\r\n        <div>\r\n            <center>\r\n            <Paper component=\"form\" className={classes2.root}>\r\n            \r\n            <InputBase\r\n                className={classes2.input}\r\n                placeholder=\"Search Product\"\r\n                inputProps={{ 'aria-label': 'search google maps' }}\r\n                onChange={ searchChange }\r\n            />\r\n            <IconButton type=\"submit\" className={classes2.iconButton} aria-label=\"search\" >\r\n                <SearchIcon />\r\n            </IconButton>\r\n            \r\n            </Paper>\r\n            </center>\r\n            <br/>\r\n            <TableContainer component={Paper}>\r\n            <Table className={classes.table} aria-label=\"simple table\">\r\n                <TableHead>\r\n                <TableRow>\r\n                <TableCell align=\"center\">ID</TableCell>\r\n                <TableCell align=\"left\">NAME</TableCell>\r\n                <TableCell align=\"center\">IMAGE</TableCell>\r\n                <TableCell align=\"left\">VISIBLE</TableCell>\r\n                <TableCell align=\"center\">ACTION</TableCell>\r\n                </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                {fitercate\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  return (\r\n                    <TableRow key={index} onClick={event => onClickHanger(event, row, index+ page * rowsPerPage)}> \r\n                        <TableCell align=\"center\">{row.id}</TableCell>\r\n                        <TableCell align=\"left\"> {row.category_name}</TableCell>\r\n                        <TableCell align=\"center\"><center><img src={row.image} className=\"h-16\"/></center></TableCell>\r\n                        <TableCell align=\"left\" >\r\n                        <FormControlLabel\r\n                          control={<Switch checked={row.status} onChange={event => handleChangeDense(event, index+ page * rowsPerPage)} />}\r\n                          label=\"Activate\"\r\n                        />\r\n                        {/* <span className=\"text-green-600\">{(row.status)?\"TRUE\":\"\"}</span><span className=\"text-red-600\">{(row.status)?\"\":\"FALSE\"}</span> */}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                            <Button variant=\"contained\" color=\"secondary\" onClick={event => Delete(event, index+ page * rowsPerPage)}>Delete</Button>\r\n                        </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n                </TableBody>\r\n            </Table>\r\n            <center className=\"text-red-600\">{(fitercate.length == 0)?\"There are no record!\":\"\"}</center>\r\n            <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                component=\"div\"\r\n                count={fitercate.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n            </TableContainer>\r\n            <div className=\"pb-32\"></div>\r\n        </div>\r\n    );\r\n}\r\nexport default Product_manage;","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\AdminOrder.jsx",["158","159"],"C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Adminstrator\\Order_manage.js",["160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175"],"import Table from '@material-ui/core/Table';\r\nimport React from 'react';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport {useState, useEffect} from 'react';\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    padding: '2px 4px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    width: 400,\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  },\r\n  divider: {\r\n    height: 28,\r\n    margin: 4,\r\n  },\r\n}));\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  });\r\n\r\n  function stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n      const order = comparator(a[0], b[0]);\r\n      if (order !== 0) return order;\r\n      return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n  }\r\n  function getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n      ? (a, b) => descendingComparator(a, b, orderBy)\r\n      : (a, b) => -descendingComparator(a, b, orderBy);\r\n  }\r\n\r\n  function descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n\r\nfunction Order_manage({orders, setClickRow, setformData, setorders,clickRow, cate, product }) {\r\n    var rs = [];\r\n    const Swal = require('sweetalert2');\r\n    const [search, setsearch] = useState(\"\");\r\n    const [ids, setids] = useState([]);\r\n    const [resultfilter, setresultfilter] = useState([...orders]);\r\n    const [order, setOrder] = React.useState('asc');\r\n    const [orderBy, setOrderBy] = React.useState('calories');\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n    const classes = useStyles();\r\n    const classes2 = useStyles2();\r\n    const [filterStatus, setfilterStatus] = useState(false);\r\n\r\n    // const isSelected = (name) => selected.indexOf(name) !== -1;\r\n    const handleChangePage = (event, newPage) => {\r\n      setPage(newPage);\r\n    };\r\n    \r\n    const handleChangeRowsPerPage = (event) => {\r\n      setRowsPerPage(parseInt(event.target.value, 10));\r\n      setPage(0);\r\n    };\r\n\r\n    const searchChange = (event) => {\r\n        setsearch(event.target.value.trim());\r\n        // list sản phẩm \r\n        const proSearch = product.filter( p => {\r\n            return p.name.toLowerCase().indexOf(event.target.value.trim().toLowerCase()) !== -1;\r\n          }).map( x => x.id );\r\n        // console.log(\"Log list sản phẩm tìm kiếm được\");\r\n        // console.log(proSearch);\r\n        setids(proSearch); // list id của sản phầm cần tìm hóa đơn\r\n        proSearch.forEach(function(item, index, array) {\r\n          orders.forEach( \r\n            function(or, idx){\r\n              if(or.pro_id == item){\r\n                rs.push(or);\r\n              }\r\n            }\r\n          )\r\n        });\r\n        // console.log(\"Hóa đơn có id sản phẩm trùng id sản phẩm tìm được bằng filter\");\r\n        // console.log(rs);\r\n        setresultfilter(rs);\r\n        setfilterStatus(true);\r\n    }\r\n    \r\n    const foundProductByID = (product, id) => {\r\n      return product.find(x => x.id == id);\r\n    }\r\n  \r\n    // setresultfilter((resultfilter.length != 0)?resultfilter: orders);\r\n\r\n    return(\r\n        <div>\r\n            <center>\r\n            <Paper component=\"form\" className={classes2.root}>\r\n            \r\n            <InputBase\r\n                className={classes2.input}\r\n                placeholder=\"Search Order By Product Name\"\r\n                inputProps={{ 'aria-label': 'search google maps' }}\r\n                onChange={ searchChange }\r\n            />\r\n            <IconButton type=\"submit\" className={classes2.iconButton} aria-label=\"search\" >\r\n                <SearchIcon />\r\n            </IconButton>\r\n            \r\n            </Paper>\r\n            </center>\r\n            <br/>\r\n            <TableContainer component={Paper}>\r\n            <Table className={classes.table} aria-label=\"simple table\">\r\n                <TableHead>\r\n                <TableRow>\r\n                <TableCell align=\"center\">NO.</TableCell>\r\n                <TableCell align=\"left\">PRODUCT</TableCell>\r\n                <TableCell align=\"center\">IMAGE</TableCell>\r\n                <TableCell align=\"left\">TOTAL</TableCell>\r\n                <TableCell align=\"left\">DATE ORDER</TableCell>\r\n                <TableCell align=\"left\">TOTAL MONEY (VNĐ)</TableCell>\r\n                {/* <TableCell align=\"center\">ACTION</TableCell> */}\r\n                </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                {stableSort((filterStatus == true)? resultfilter : orders , getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                //   const isItemSelected = isSelected(row.id);\r\n                //   const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow key={index}> \r\n                      <TableCell align=\"center\">{index+ page * rowsPerPage + 1}</TableCell>\r\n                      <TableCell align=\"left\"> {(foundProductByID(product,row.pro_id))?foundProductByID(product,row.pro_id).name : <span className=\"text-gray-500\">This product does not exist!</span>}</TableCell>\r\n                      <TableCell align=\"center\" >\r\n                        <center>\r\n                          <img \r\n                            src={(foundProductByID(product,row.pro_id))?foundProductByID(product,row.pro_id).image : \"\"} \r\n                            className=\"h-16\"/>\r\n                        </center></TableCell>\r\n                      <TableCell align=\"left\" >{row.total}</TableCell>\r\n                      <TableCell align=\"left\" >{row.date}</TableCell>\r\n                      <TableCell align=\"left\" >{row.total_money.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\")}</TableCell>\r\n                      {/* <TableCell align=\"center\">\r\n                          <Button variant=\"contained\" color=\"secondary\" onClick={event => Delete(event, orders.indexOf(row))}>Delete</Button>\r\n                      </TableCell> */}\r\n                      </TableRow>\r\n              \r\n                  );\r\n                })}\r\n                </TableBody>\r\n            </Table>\r\n            <center className=\"text-red-600\">{((resultfilter.length == 0  && filterStatus == true) || (orders.length == 0))?\"There are no record!\":\"\"}</center>\r\n            <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                component=\"div\"\r\n                count={(filterStatus == true)? resultfilter.length : orders.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n            </TableContainer>\r\n            <div className=\"pb-32\"></div>\r\n        </div>\r\n    );\r\n}\r\nexport default Order_manage;","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Cart\\Cart.js",["176","177"],"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport {useState, useEffect} from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport Cart_manage from './Cart_manage';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\n// import { confirmAlert } from 'react-confirm-alert';\r\n\r\n// import Swal from 'sweetalert2/dist/sweetalert2.js';\r\n// import 'sweetalert2/src/sweetalert2.scss'\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  });\r\n\r\n\r\nfunction Cart() {\r\n    \r\n    const initValue = [];\r\n    const [cart, setcart] = useState(initValue);\r\n    const [order, setorder] = useState(initValue);\r\n    const [product, setproducts] = useState(initValue);\r\n\r\nuseEffect(() => {\r\n\r\n    async function getcart() {\r\n      const {data} = await axios.get(`http://localhost:3040/cart`);\r\n      console.log(data);\r\n      setcart(data);\r\n      \r\n    }\r\n    async function getProduct() {\r\n        const {data : x} = await axios.get(\"http://localhost:3040/product\");\r\n        setproducts(x);\r\n        console.log(\"product -----\");\r\n        console.log(x);\r\n      }\r\n\r\n    async function getorder() {\r\n        const {data} = await axios.get(`http://localhost:3040/order`);\r\n        setorder(data);\r\n      }\r\n    // getProductforkey(search);\r\n    getcart();\r\n    getProduct();\r\n    getorder();\r\n  }, []);\r\n\r\n  \r\n  const divStyle = {\r\n    height: '5px',\r\n    width:'100%',\r\n   };\r\n    return(\r\n        <div>\r\n            <Router>\r\n            <div className=\"h-28\"></div>\r\n            <Container maxWidth=\"md\">\r\n                <ShoppingCartIcon style={{ fontSize: 100 }} color=\"secondary\"/>\r\n                \r\n                <div style={divStyle}></div>\r\n                <Cart_manage \r\n                    cart ={cart}\r\n                    setcart = {setcart}\r\n                    product={product}\r\n                    order = {order}\r\n                    setorder = {setorder}\r\n                />\r\n            </Container>\r\n            {/* <Route path=\"/admin\" component={Admin}/>\r\n          <Route path=\"/\" component={Home} exact={true}/> */}\r\n            </Router>\r\n        </div>\r\n    );\r\n}\r\nexport default Cart;","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Cart\\Cart_manage.js",["178","179","180","181","182","183"],{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","severity":1,"message":"189","line":6,"column":9,"nodeType":"190","messageId":"191","endLine":6,"endColumn":17},{"ruleId":"188","severity":1,"message":"192","line":6,"column":19,"nodeType":"190","messageId":"191","endLine":6,"endColumn":28},{"ruleId":"193","severity":1,"message":"194","line":14,"column":11,"nodeType":"195","messageId":"196","endLine":29,"endColumn":12},{"ruleId":"197","severity":1,"message":"198","line":36,"column":53,"nodeType":"199","messageId":"200","endLine":36,"endColumn":55},{"ruleId":"197","severity":1,"message":"201","line":53,"column":55,"nodeType":"199","messageId":"200","endLine":53,"endColumn":57},{"ruleId":"188","severity":1,"message":"202","line":15,"column":20,"nodeType":"190","messageId":"191","endLine":15,"endColumn":31},{"ruleId":"184","replacedBy":"203"},{"ruleId":"186","replacedBy":"204"},{"ruleId":"188","severity":1,"message":"192","line":18,"column":19,"nodeType":"190","messageId":"191","endLine":18,"endColumn":28},{"ruleId":"197","severity":1,"message":"201","line":82,"column":60,"nodeType":"199","messageId":"200","endLine":82,"endColumn":62},{"ruleId":"197","severity":1,"message":"201","line":107,"column":36,"nodeType":"199","messageId":"200","endLine":107,"endColumn":38},{"ruleId":"197","severity":1,"message":"201","line":148,"column":56,"nodeType":"199","messageId":"200","endLine":148,"endColumn":58},{"ruleId":"205","severity":1,"message":"206","line":207,"column":58,"nodeType":"207","endLine":207,"endColumn":97},{"ruleId":"197","severity":1,"message":"201","line":229,"column":68,"nodeType":"199","messageId":"200","endLine":229,"endColumn":70},{"ruleId":"188","severity":1,"message":"208","line":12,"column":8,"nodeType":"190","messageId":"191","endLine":12,"endColumn":17},{"ruleId":"188","severity":1,"message":"209","line":32,"column":12,"nodeType":"190","messageId":"191","endLine":32,"endColumn":22},{"ruleId":"197","severity":1,"message":"198","line":41,"column":21,"nodeType":"199","messageId":"200","endLine":41,"endColumn":23},{"ruleId":"197","severity":1,"message":"201","line":49,"column":55,"nodeType":"199","messageId":"200","endLine":49,"endColumn":57},{"ruleId":"197","severity":1,"message":"201","line":69,"column":55,"nodeType":"199","messageId":"200","endLine":69,"endColumn":57},{"ruleId":"205","severity":1,"message":"206","line":166,"column":33,"nodeType":"207","endLine":166,"endColumn":98},{"ruleId":"188","severity":1,"message":"210","line":9,"column":8,"nodeType":"190","messageId":"191","endLine":9,"endColumn":24},{"ruleId":"188","severity":1,"message":"211","line":10,"column":8,"nodeType":"190","messageId":"191","endLine":10,"endColumn":30},{"ruleId":"188","severity":1,"message":"212","line":11,"column":8,"nodeType":"190","messageId":"191","endLine":11,"endColumn":31},{"ruleId":"188","severity":1,"message":"213","line":12,"column":8,"nodeType":"190","messageId":"191","endLine":12,"endColumn":17},{"ruleId":"188","severity":1,"message":"214","line":13,"column":8,"nodeType":"190","messageId":"191","endLine":13,"endColumn":20},{"ruleId":"188","severity":1,"message":"215","line":14,"column":27,"nodeType":"190","messageId":"191","endLine":14,"endColumn":33},{"ruleId":"188","severity":1,"message":"216","line":14,"column":35,"nodeType":"190","messageId":"191","endLine":14,"endColumn":40},{"ruleId":"188","severity":1,"message":"217","line":14,"column":42,"nodeType":"190","messageId":"191","endLine":14,"endColumn":46},{"ruleId":"188","severity":1,"message":"218","line":63,"column":9,"nodeType":"190","messageId":"191","endLine":63,"endColumn":16},{"ruleId":"188","severity":1,"message":"219","line":64,"column":10,"nodeType":"190","messageId":"191","endLine":64,"endColumn":15},{"ruleId":"188","severity":1,"message":"220","line":64,"column":17,"nodeType":"190","messageId":"191","endLine":64,"endColumn":25},{"ruleId":"188","severity":1,"message":"221","line":15,"column":7,"nodeType":"190","messageId":"191","endLine":15,"endColumn":16},{"ruleId":"188","severity":1,"message":"222","line":5,"column":8,"nodeType":"190","messageId":"191","endLine":5,"endColumn":18},{"ruleId":"188","severity":1,"message":"223","line":8,"column":8,"nodeType":"190","messageId":"191","endLine":8,"endColumn":24},{"ruleId":"188","severity":1,"message":"224","line":9,"column":8,"nodeType":"190","messageId":"191","endLine":9,"endColumn":14},{"ruleId":"188","severity":1,"message":"225","line":10,"column":8,"nodeType":"190","messageId":"191","endLine":10,"endColumn":19},{"ruleId":"188","severity":1,"message":"226","line":11,"column":8,"nodeType":"190","messageId":"191","endLine":11,"endColumn":14},{"ruleId":"188","severity":1,"message":"227","line":12,"column":8,"nodeType":"190","messageId":"191","endLine":12,"endColumn":16},{"ruleId":"188","severity":1,"message":"218","line":24,"column":11,"nodeType":"190","messageId":"191","endLine":24,"endColumn":18},{"ruleId":"188","severity":1,"message":"228","line":25,"column":11,"nodeType":"190","messageId":"191","endLine":25,"endColumn":27},{"ruleId":"197","severity":1,"message":"198","line":31,"column":21,"nodeType":"199","messageId":"200","endLine":31,"endColumn":23},{"ruleId":"197","severity":1,"message":"201","line":43,"column":55,"nodeType":"199","messageId":"200","endLine":43,"endColumn":57},{"ruleId":"197","severity":1,"message":"201","line":61,"column":55,"nodeType":"199","messageId":"200","endLine":61,"endColumn":57},{"ruleId":"188","severity":1,"message":"229","line":91,"column":11,"nodeType":"190","messageId":"191","endLine":91,"endColumn":28},{"ruleId":"205","severity":1,"message":"206","line":133,"column":29,"nodeType":"207","endLine":133,"endColumn":94},{"ruleId":"188","severity":1,"message":"192","line":16,"column":19,"nodeType":"190","messageId":"191","endLine":16,"endColumn":28},{"ruleId":"188","severity":1,"message":"230","line":52,"column":12,"nodeType":"190","messageId":"191","endLine":52,"endColumn":22},{"ruleId":"188","severity":1,"message":"231","line":61,"column":12,"nodeType":"190","messageId":"191","endLine":61,"endColumn":25},{"ruleId":"197","severity":1,"message":"201","line":107,"column":60,"nodeType":"199","messageId":"200","endLine":107,"endColumn":62},{"ruleId":"197","severity":1,"message":"201","line":158,"column":56,"nodeType":"199","messageId":"200","endLine":158,"endColumn":58},{"ruleId":"197","severity":1,"message":"201","line":174,"column":76,"nodeType":"199","messageId":"200","endLine":174,"endColumn":78},{"ruleId":"197","severity":1,"message":"201","line":181,"column":50,"nodeType":"199","messageId":"200","endLine":181,"endColumn":52},{"ruleId":"205","severity":1,"message":"206","line":231,"column":59,"nodeType":"207","endLine":231,"endColumn":98},{"ruleId":"197","severity":1,"message":"201","line":247,"column":65,"nodeType":"199","messageId":"200","endLine":247,"endColumn":67},{"ruleId":"188","severity":1,"message":"221","line":16,"column":7,"nodeType":"190","messageId":"191","endLine":16,"endColumn":16},{"ruleId":"188","severity":1,"message":"232","line":29,"column":12,"nodeType":"190","messageId":"191","endLine":29,"endColumn":20},{"ruleId":"188","severity":1,"message":"233","line":10,"column":8,"nodeType":"190","messageId":"191","endLine":10,"endColumn":14},{"ruleId":"188","severity":1,"message":"234","line":11,"column":8,"nodeType":"190","messageId":"191","endLine":11,"endColumn":13},{"ruleId":"188","severity":1,"message":"192","line":16,"column":19,"nodeType":"190","messageId":"191","endLine":16,"endColumn":28},{"ruleId":"188","severity":1,"message":"235","line":73,"column":11,"nodeType":"190","messageId":"191","endLine":73,"endColumn":15},{"ruleId":"188","severity":1,"message":"236","line":74,"column":12,"nodeType":"190","messageId":"191","endLine":74,"endColumn":18},{"ruleId":"188","severity":1,"message":"237","line":75,"column":12,"nodeType":"190","messageId":"191","endLine":75,"endColumn":15},{"ruleId":"188","severity":1,"message":"238","line":77,"column":19,"nodeType":"190","messageId":"191","endLine":77,"endColumn":27},{"ruleId":"188","severity":1,"message":"239","line":78,"column":21,"nodeType":"190","messageId":"191","endLine":78,"endColumn":31},{"ruleId":"197","severity":1,"message":"201","line":107,"column":28,"nodeType":"199","messageId":"200","endLine":107,"endColumn":30},{"ruleId":"197","severity":1,"message":"201","line":120,"column":37,"nodeType":"199","messageId":"200","endLine":120,"endColumn":39},{"ruleId":"197","severity":1,"message":"201","line":157,"column":43,"nodeType":"199","messageId":"200","endLine":157,"endColumn":45},{"ruleId":"205","severity":1,"message":"206","line":169,"column":27,"nodeType":"207","endLine":171,"endColumn":47},{"ruleId":"197","severity":1,"message":"201","line":185,"column":69,"nodeType":"199","messageId":"200","endLine":185,"endColumn":71},{"ruleId":"197","severity":1,"message":"201","line":185,"column":91,"nodeType":"199","messageId":"200","endLine":185,"endColumn":93},{"ruleId":"197","severity":1,"message":"201","line":185,"column":118,"nodeType":"199","messageId":"200","endLine":185,"endColumn":120},{"ruleId":"197","severity":1,"message":"201","line":189,"column":38,"nodeType":"199","messageId":"200","endLine":189,"endColumn":40},{"ruleId":"188","severity":1,"message":"221","line":15,"column":7,"nodeType":"190","messageId":"191","endLine":15,"endColumn":16},{"ruleId":"240","severity":1,"message":"241","line":67,"column":17,"nodeType":"207","endLine":73,"endColumn":19},{"ruleId":"188","severity":1,"message":"189","line":16,"column":9,"nodeType":"190","messageId":"191","endLine":16,"endColumn":17},{"ruleId":"188","severity":1,"message":"192","line":16,"column":19,"nodeType":"190","messageId":"191","endLine":16,"endColumn":28},{"ruleId":"197","severity":1,"message":"201","line":70,"column":39,"nodeType":"199","messageId":"200","endLine":70,"endColumn":41},{"ruleId":"197","severity":1,"message":"201","line":93,"column":51,"nodeType":"199","messageId":"200","endLine":93,"endColumn":53},{"ruleId":"188","severity":1,"message":"242","line":115,"column":9,"nodeType":"190","messageId":"191","endLine":115,"endColumn":14},{"ruleId":"205","severity":1,"message":"206","line":170,"column":41,"nodeType":"207","endLine":170,"endColumn":149},"no-native-reassign",["243"],"no-negated-in-lhs",["244"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'setformData' is assigned a value but never used.",["243"],["244"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Container' is defined but never used.","'fileUpload' is assigned a value but never used.","'BottomNavigation' is defined but never used.","'BottomNavigationAction' is defined but never used.","'CollectionsBookmarkIcon' is defined but never used.","'WatchIcon' is defined but never used.","'FileCopyIcon' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'classes' is assigned a value but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'useStyles' is assigned a value but never used.","'InputLabel' is defined but never used.","'FormControlLabel' is defined but never used.","'Switch' is defined but never used.","'FormControl' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'CatehandleChange' is assigned a value but never used.","'handleChangeDense' is assigned a value but never used.","'stableSort' is defined but never used.","'getComparator' is defined but never used.","'formData' is assigned a value but never used.","'Button' is defined but never used.","'axios' is defined but never used.","'Swal' is assigned a value but never used.","'search' is assigned a value but never used.","'ids' is assigned a value but never used.","'setOrder' is assigned a value but never used.","'setOrderBy' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component Cart_manage must be in PascalCase or SCREAMING_SNAKE_CASE","'maxID' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]