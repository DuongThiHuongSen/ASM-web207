[{"C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\index.js":"1","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\reportWebVitals.js":"2","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\App.js":"3","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Header\\header.js":"4","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Header\\Banner.js":"5","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Body\\Category.js":"6","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Body\\TopWatch.js":"7","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Body\\Introduction.jsx":"8","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Footer\\Foot.jsx":"9","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Home.jsx":"10","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\history.js":"11","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Adminstrator\\Porduct_manage.js":"12","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Adminstrator\\CreateProduct.js":"13","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\AdminProduct.jsx":"14","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\AdminCate.jsx":"15","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Admin.jsx":"16","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Adminstrator\\CreateCate.js":"17","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Adminstrator\\Cate_manage.js":"18","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\AdminOrder.jsx":"19","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Adminstrator\\Order_manage.js":"20","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Cart\\Cart.js":"21","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Cart\\Cart_manage.js":"22","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\ProductByCate.js":"23","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\AllProducts.jsx":"24"},{"size":811,"mtime":1613768210052,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"26"},{"size":1285,"mtime":1614674671302,"results":"28","hashOfConfig":"26"},{"size":1860,"mtime":1614539187117,"results":"29","hashOfConfig":"26"},{"size":271,"mtime":1611744506141,"results":"30","hashOfConfig":"26"},{"size":1364,"mtime":1614533331129,"results":"31","hashOfConfig":"26"},{"size":7829,"mtime":1614674479959,"results":"32","hashOfConfig":"26"},{"size":2511,"mtime":1611764669978,"results":"33","hashOfConfig":"26"},{"size":2764,"mtime":1611766975619,"results":"34","hashOfConfig":"26"},{"size":2557,"mtime":1614674705265,"results":"35","hashOfConfig":"26"},{"size":89,"mtime":1611900393402,"results":"36","hashOfConfig":"26"},{"size":11032,"mtime":1614540181427,"results":"37","hashOfConfig":"26"},{"size":11461,"mtime":1614674990137,"results":"38","hashOfConfig":"26"},{"size":3127,"mtime":1614539489970,"results":"39","hashOfConfig":"26"},{"size":2396,"mtime":1614234572362,"results":"40","hashOfConfig":"26"},{"size":2363,"mtime":1614312063933,"results":"41","hashOfConfig":"26"},{"size":5470,"mtime":1614525709444,"results":"42","hashOfConfig":"26"},{"size":10081,"mtime":1614567346428,"results":"43","hashOfConfig":"26"},{"size":1639,"mtime":1614567103065,"results":"44","hashOfConfig":"26"},{"size":7720,"mtime":1614566090834,"results":"45","hashOfConfig":"26"},{"size":2389,"mtime":1614565497948,"results":"46","hashOfConfig":"26"},{"size":9607,"mtime":1614479378529,"results":"47","hashOfConfig":"26"},{"size":5246,"mtime":1614567839922,"results":"48","hashOfConfig":"26"},{"size":5477,"mtime":1614567544903,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"mveh9h",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"52"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"52"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"52"},"C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\index.js",[],["111","112"],"C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\reportWebVitals.js",[],"C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\App.js",[],"C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Header\\header.js",[],"C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Header\\Banner.js",[],"C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Body\\Category.js",[],"C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Body\\TopWatch.js",["113","114","115","116","117"],"C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Body\\Introduction.jsx",[],"C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Footer\\Foot.jsx",[],"C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Home.jsx",["118","119"],"C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\history.js",[],["120","121"],"C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Adminstrator\\Porduct_manage.js",["122","123","124","125","126","127","128"],"import Table from '@material-ui/core/Table';\r\nimport React from 'react';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst propTypes = {\r\n    product : PropTypes.array.isRequired, // cart nhan vao phai la array .isRequied la yeu cau phai co\r\n    setcart : PropTypes.func.isRequired,\r\n    clickRow : PropTypes.number.isRequired,\r\n    setClickRow: PropTypes.func.isRequired,\r\n    formData : PropTypes.object.isRequired,\r\n    setformData : PropTypes.func.isRequired,\r\n    setproduct: PropTypes.func.isRequired,\r\n    cate: PropTypes.array.isRequired, // chuỗi các category\r\n};\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    padding: '2px 4px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    width: 400,\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  },\r\n  divider: {\r\n    height: 28,\r\n    margin: 4,\r\n  },\r\n}));\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  });\r\n\r\nfunction Product_manage({product, setClickRow, setformData, setproduct,clickRow, cate }) {\r\n    const Swal = require('sweetalert2');\r\n    const [search, setsearch] = useState(\"\");\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n    const classes = useStyles();\r\n    const classes2 = useStyles2();\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n      setPage(newPage);\r\n    };\r\n  \r\n    const handleChangeRowsPerPage = (event) => {\r\n      setRowsPerPage(parseInt(event.target.value, 10));\r\n      setPage(0);\r\n    };\r\n    const onClickHanger = (event, value, index) => {\r\n        setClickRow(index);\r\n        setformData(value); // Truyền dữ liệu đẩy lên form\r\n    }\r\n    const Delete = (event,index) => {\r\n        event.stopPropagation();\r\n          Swal.fire({\r\n            title: 'Are you sure you want to delete this record?',\r\n            showDenyButton: true,\r\n            showCancelButton: false,\r\n            confirmButtonText: `Confirm`,\r\n            denyButtonText: `Cancel`,\r\n          }).then( async (result) => {\r\n            /* Read more about isConfirmed, isDenied below */\r\n            if (result.isConfirmed) {\r\n                //-------------------------\r\n                try {\r\n                    const url = `http://localhost:3040/product/${ product[index].id }`;\r\n                    const response = await axios.delete(url);\r\n                    // console.log(response);\r\n                    if (response.status && response.status == 200) {\r\n                        Swal.fire('Deleted!', '', 'success');\r\n                        setClickRow(-1);\r\n                        setformData({\r\n                            id: '',\r\n                            name: '',\r\n                            price: '',\r\n                            cate_id: '',\r\n                            status : true,\r\n                            quantity: '',\r\n                            image:'',\r\n                            description: ''\r\n                          });\r\n                        \r\n                    }\r\n                } catch (error) {\r\n                    console.error(error);\r\n                }\r\n                setproduct(product=[...product.slice(0, index),...product.slice(index+1, product.length)]);\r\n\r\n            } \r\n          })\r\n        setClickRow(clickRow=-1);\r\n    }\r\n\r\n    const foundCate = (cate , id) => {\r\n        return cate.find(x => x.id == id);\r\n    }\r\n    \r\n    const searchChange = (event) => {\r\n        setsearch(event.target.value.trim());\r\n    }\r\n    const fiterProduct = product.filter( p => \r\n      { return (p.name.toLowerCase().indexOf(search.toLowerCase()) !== -1) \r\n        || (p.description.toLowerCase().indexOf(search.toLowerCase()) !== -1)\r\n        || (foundCate(cate, p.cate_id).category_name.toLowerCase().indexOf(search.toLowerCase()) !== -1)\r\n      });\r\n    // đổi Trạng thái hoạt động\r\n    const handleChangeDense = (event, index) => {\r\n      // event.stopPropagation();\r\n      // setDense(event.target.checked);\r\n      const rowUpdate = {...product[index],status : event.target.checked };\r\n      setformData({\r\n        id: '',\r\n        name: '',\r\n        price: '',\r\n        cate_id: '',\r\n        status : true,\r\n        quantity: '',\r\n        image:'',\r\n        description: ''\r\n      });\r\n      \r\n      Swal.fire({\r\n        title: 'Are you sure you want to change active status of this Product ?',\r\n        showDenyButton: true,\r\n        showCancelButton: false,\r\n        confirmButtonText: `Confirm`,\r\n        denyButtonText: `Cancel`,\r\n      }).then( async (result) => {\r\n        /* Read more about isConfirmed, isDenied below */\r\n        if (result.isConfirmed) {\r\n            //-------------------------\r\n            try {\r\n                const url = `http://localhost:3040/product/${ rowUpdate.id }`;\r\n                const response = await axios.put(url,rowUpdate);\r\n                console.log(response);\r\n                if (response.status && response.status == 200) {\r\n                    Swal.fire('Update successfully!', '', 'success');\r\n                }\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n            // setcate(cate=[...cate.slice(0, index),rowUpdate,...cate.slice(index+1, cate.length)]);\r\n            setproduct(product=[...product.slice(0, index),rowUpdate,...product.slice(index+1, product.length)]);\r\n        } \r\n      })\r\n    };\r\n    // console.log(\"filter product\");\r\n    // console.log(fiterProduct);\r\n    return(\r\n        <div>\r\n            <center>\r\n            <Paper component=\"form\" className={classes2.root}>\r\n            \r\n            <InputBase\r\n                className={classes2.input}\r\n                placeholder=\"Search Product\"\r\n                inputProps={{ 'aria-label': 'search google maps' }}\r\n                onChange={ searchChange }\r\n            />\r\n            <IconButton type=\"submit\" className={classes2.iconButton} aria-label=\"search\" >\r\n                <SearchIcon />\r\n            </IconButton>\r\n            \r\n            </Paper>\r\n            </center>\r\n            <br/>\r\n            <TableContainer component={Paper}>\r\n            <Table className={classes.table} aria-label=\"simple table\">\r\n                <TableHead>\r\n                <TableRow>\r\n                <TableCell align=\"center\">NO.</TableCell>\r\n                <TableCell align=\"left\">NAME</TableCell>\r\n                <TableCell align=\"center\">IMAGE</TableCell>\r\n                <TableCell align=\"left\">DESCRIPTION</TableCell>\r\n                <TableCell align=\"left\">PRICE</TableCell>\r\n                <TableCell align=\"left\">QUANTITY</TableCell>\r\n                <TableCell align=\"left\">VISIBLE</TableCell>\r\n                <TableCell align=\"center\">CATEGORY</TableCell>\r\n                <TableCell align=\"center\">ACTION</TableCell>\r\n                </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                {product.filter( p => \r\n                                  { return (p.name.toLowerCase().indexOf(search.toLowerCase()) !== -1) \r\n                                    || (p.description.toLowerCase().indexOf(search.toLowerCase()) !== -1)\r\n                                    || (foundCate(cate, p.cate_id).category_name.toLowerCase().indexOf(search.toLowerCase()) !== -1)\r\n                                  }\r\n                                )\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  return (\r\n                    <TableRow key={row.id} onClick={event => onClickHanger(event, row, page * rowsPerPage + index)}> \r\n                      <TableCell align=\"center\">{page * rowsPerPage + index +1}</TableCell>\r\n                      <TableCell align=\"left\"> {row.name}</TableCell>\r\n                      <TableCell align=\"center\" ><center><img src={row.image} className=\"h-16\"/></center></TableCell>\r\n                      <TableCell align=\"left\" >{row.description}</TableCell>\r\n                      <TableCell align=\"left\" >{row.price}</TableCell>\r\n                      <TableCell align=\"left\" >{row.quantity}</TableCell>\r\n                      <TableCell align=\"left\" >\r\n                        <FormControlLabel\r\n                            control={<Switch checked={row.status} onChange={event => handleChangeDense(event, index+ page * rowsPerPage)} />}\r\n                            label=\"Activate\"\r\n                          />\r\n                        {/* <span className=\"text-green-600\">{(row.status)?\"TRUE\":\"\"}</span><span className=\"text-red-600\">{(row.status)?\"\":\"FALSE\"}</span> */}\r\n                     </TableCell>\r\n                      <TableCell align=\"center\" >{(foundCate(cate, row.cate_id))?foundCate(cate, row.cate_id).category_name : \"Danh mục không tồn tại\"}</TableCell>\r\n                      <TableCell align=\"center\">\r\n                          <Button variant=\"contained\" color=\"secondary\" onClick={event => Delete(event, page * rowsPerPage + index)}>Delete</Button>\r\n                      </TableCell>\r\n                      </TableRow>\r\n              \r\n                  );\r\n                })}\r\n                \r\n                </TableBody>\r\n            </Table>\r\n            <center className=\"text-red-600\">{(fiterProduct.length == 0)?\"There are no record!\":\"\"}</center>\r\n            <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                component=\"div\"\r\n                count={product.filter( p => \r\n                  { return (p.name.toLowerCase().indexOf(search.toLowerCase()) !== -1) \r\n                    || (p.description.toLowerCase().indexOf(search.toLowerCase()) !== -1)\r\n                    || (foundCate(cate, p.cate_id).category_name.toLowerCase().indexOf(search.toLowerCase()) !== -1)\r\n                  }\r\n                ).length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n            </TableContainer>\r\n            <div className=\"pb-32\"></div>\r\n        </div>\r\n    );\r\n}\r\nexport default Product_manage;","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Adminstrator\\CreateProduct.js",["129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148"],"C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\AdminProduct.jsx",["149","150","151","152","153","154","155","156","157","158","159"],"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport {useState, useEffect} from 'react';\r\nimport Product from './Adminstrator/Porduct_manage';\r\nimport CreateProduct from './Adminstrator/CreateProduct';\r\nimport Container from '@material-ui/core/Container';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport CollectionsBookmarkIcon from '@material-ui/icons/CollectionsBookmark';\r\nimport WatchIcon from '@material-ui/icons/Watch';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\n// import { confirmAlert } from 'react-confirm-alert';\r\n\r\n// import Swal from 'sweetalert2/dist/sweetalert2.js';\r\n// import 'sweetalert2/src/sweetalert2.scss'\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  });\r\n\r\n\r\nfunction AdminProduct() {\r\n    \r\n    const initValue = [];\r\n    const [product, setproducts] = useState(initValue);\r\n    const [cate, setcate] = useState(initValue);\r\n    const [clickRow, setClickRow] = useState(-1);\r\n    const [formData, setformData] = useState({\r\n    id: '',\r\n    name: '',\r\n    price: '',\r\n    cate_id: '',\r\n    status : true,\r\n    quantity: '',\r\n    image:'',\r\n    description: '',\r\n  });\r\nuseEffect(() => {\r\n    async function getProduct() {\r\n      const {data : x} = await axios.get(\"http://localhost:3040/product\");\r\n      setproducts(x);\r\n    }\r\n    // async function getProductforkey(key) {\r\n    //   const {data } = await axios.get(`http://localhost:3040/product?name_like=${key}`);\r\n    //   console.log(\"search\"+search);\r\n    //   setproducts(data);\r\n    // }\r\n    async function getCate() {\r\n      const {data} = await axios.get(\"http://localhost:3040/category\");\r\n      setcate(data);\r\n    }\r\n    // getProductforkey(search);\r\n    getProduct();\r\n    getCate();\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n  const divStyle = {\r\n    height: '5px',\r\n    width:'100%',\r\n   };\r\n    return(\r\n        <div>\r\n            {/* <div className=\"h-28\"></div> */}\r\n            <Container maxWidth=\"md\">\r\n            <div style={divStyle}></div>\r\n            <CreateProduct \r\n                clickRow={clickRow} \r\n                formData={formData} \r\n                setformData={setformData}\r\n                setproduct={setproducts}\r\n                product={product}\r\n                setClickRow ={setClickRow}\r\n                cate = {cate}\r\n            />\r\n            </Container>\r\n            <Container maxWidth=\"lg\">\r\n            < Product \r\n                product={product}\r\n                setproduct={setproducts}\r\n                setformData={setformData} // set giá trị cho form hiển thị\r\n                setClickRow ={setClickRow}\r\n                clickRow={clickRow}\r\n                cate = {cate}\r\n                setcate = {setcate}\r\n                \r\n            />\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\nexport default AdminProduct;","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\AdminCate.jsx",["160"],"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport {useState, useEffect} from 'react';\r\nimport Cates from './Adminstrator/Cate_manage';\r\nimport CreateCate from './Adminstrator/CreateCate';\r\nimport Container from '@material-ui/core/Container';\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n// import { confirmAlert } from 'react-confirm-alert';\r\n\r\n// import Swal from 'sweetalert2/dist/sweetalert2.js';\r\n// import 'sweetalert2/src/sweetalert2.scss'\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  });\r\n\r\n\r\nfunction AdminCate() {\r\n    \r\n    const initValue = [];\r\n    const [cate, setcate] = useState(initValue);\r\n    const [product, setproduct] = useState(initValue);\r\n    const [clickRow, setClickRow] = useState(-1);\r\n    const [formData, setformData] = useState({\r\n    id: '',\r\n    category_name: '',\r\n    status : true,\r\n    image: '',\r\n  });\r\nuseEffect(() => {\r\n\r\n    async function getCate() {\r\n      const {data} = await axios.get(`http://localhost:3040/category`);\r\n      setcate(data);\r\n    }\r\n\r\n    async function getProduct() {\r\n      const {data : x} = await axios.get(\"http://localhost:3040/product\");\r\n      setproduct(x);\r\n    }\r\n    // getProductforkey(search);\r\n    getCate();\r\n    getProduct();\r\n  }, []);\r\n\r\n  const divStyle = {\r\n    height: '5px',\r\n    width:'100%',\r\n   };\r\n    return(\r\n        <div>\r\n            <Router>\r\n            {/* <div className=\"h-28\"></div> */}\r\n            <Container maxWidth=\"md\">\r\n            <div style={divStyle}></div>\r\n            <CreateCate \r\n                clickRow={clickRow} \r\n                formData={formData} \r\n                setformData={setformData}\r\n                setClickRow ={setClickRow}\r\n                cate = {cate}\r\n                setcate = {setcate}\r\n            />\r\n            < Cates \r\n                setformData={setformData} // set giá trị cho form hiển thị\r\n                setClickRow ={setClickRow}\r\n                clickRow={clickRow}\r\n                cate = {cate}\r\n                setcate = {setcate}\r\n                product = {product}\r\n            />\r\n            </Container>\r\n            {/* <Route path=\"/admin\" component={Admin}/>\r\n          <Route path=\"/\" component={Home} exact={true}/> */}\r\n            </Router>\r\n        </div>\r\n    );\r\n}\r\nexport default AdminCate;","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Admin.jsx",[],"C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Adminstrator\\CreateCate.js",["161","162","163","164","165","166","167","168"],"// import { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios';\r\nimport React from 'react';\r\nimport {useState} from 'react';\r\n\r\n\r\nfunction CreateCate({clickRow, setClickRow,formData, setformData, cate, setcate}) {\r\n    const err = {\r\n        errname: '',\r\n        errimage: ''\r\n    };\r\n    const [errs, seterrs] = useState(err);\r\n    const Swal = require('sweetalert2');\r\n\r\n    const ValidateForm = (Data) => {\r\n        if(Data.category_name.trim().length == 0 ){\r\n            err.errname = \"Category name is required!\";\r\n        }\r\n        if(Data.image.length == 0){\r\n            err.errimage = \"Image is required!\";\r\n        }\r\n        seterrs(err);\r\n    }\r\n\r\n    const onSubmitHanger = async (event) => {\r\n        event.preventDefault(); // không load lại trang\r\n        ValidateForm(formData);\r\n        if( err.errname.length == 0 && \r\n            err.errimage.length == 0 \r\n        ){\r\n            if(clickRow != -1){ // cập nhật thông tin\r\n                try {\r\n                    const url = `http://localhost:3040/category/${formData.id}`;\r\n                    const response = await axios({\r\n                        method:'PUT',\r\n                        url: url,\r\n                        data: formData,\r\n                    });\r\n                    // axios.put(url, formData)\r\n                    // .then((result)=>{\r\n                    //     console.log(result);\r\n                    // })\r\n                    if(response.status && response.status == 200){\r\n                        setcate(cate=[...cate.slice(0, clickRow),formData, ...cate.slice(clickRow+1, cate.length)]); // set lại Products\r\n                        Swal.fire('Update successfully!', '', 'success');\r\n                    }\r\n                } catch (error) {\r\n                    console.error(error)\r\n                }\r\n                \r\n            }else{\r\n                console.log(\"Click row onsubmit: == -1 \",clickRow);\r\n                //Thêm một dòng mới\r\n                try {\r\n                    const url = \"http://localhost:3040/category\";\r\n                    const response = await axios({\r\n                        method:'POST',\r\n                        url: url,\r\n                        data: formData,\r\n                    });\r\n                    if(response.status && response.status == 201){\r\n                        // console.log(response);\r\n                        setcate(cate=[...cate, response.data]); // set lại Products\r\n                        Swal.fire('Create new record successfully!', '', 'success');\r\n                    }\r\n                } catch (error) {\r\n                    console.error(error)\r\n                }\r\n            }\r\n        \r\n        }\r\n        \r\n        \r\n        \r\n    }\r\n    \r\n\r\n    const myChangeHandler = (event) => {\r\n        const {name,value} = event.target;\r\n        setformData({...formData,[name]:value});\r\n        ValidateForm({...formData,[name]:value});\r\n        // console.log(formData);\r\n    }\r\n    \r\n    const myClickClear = (event) => {\r\n        setClickRow(-1);\r\n        setformData({\r\n            id: '',\r\n            category_name: '',\r\n            status : true,\r\n            image: \"\"\r\n          });\r\n          seterrs(err);\r\n    }\r\n\r\n    const divStyle = {\r\n       height: '5px',\r\n       width:'100%',\r\n      };\r\n\r\n    const imageHandler = (event) => {\r\n        const reader = new FileReader();\r\n        reader.onload = () => {\r\n            if(reader.readyState){\r\n                // setfileUpload(reader.result);  \r\n                setformData({...formData,image:reader.result});\r\n                ValidateForm({...formData,image:reader.result});           \r\n            }\r\n        }\r\n        reader.readAsDataURL(event.target.files[0]);\r\n    }\r\n    \r\n\r\n    \r\n    // onChange={ myChangeHandler}\r\n    return(\r\n        <div>\r\n            <form onSubmit={onSubmitHanger} >\r\n                <TextField fullWidth variant=\"filled\" label=\"Category_id\" name=\"id\" \r\n                    value={formData.id} \r\n                    onChange={ myChangeHandler}\r\n                    disabled\r\n                />\r\n\r\n                <TextField fullWidth variant=\"filled\" label=\"Category_name\"  name=\"category_name\" \r\n                    value={formData.category_name}\r\n                    onChange={ myChangeHandler}/>\r\n                <span className=\"ml-8\">   </span>\r\n                <span className=\"text-red-700 text-xs\"> {(errs.errname.length > 0)?errs.errname:\"\"}</span>\r\n                <div>\r\n\r\n                    <Button variant=\"contained\" component=\"label\"  >\r\n                        Upload File\r\n                        <input type=\"file\" hidden name=\"image\" accept=\"image/*\" onChange={imageHandler}/>\r\n                    </Button>\r\n                    <center><img src={formData.image} width=\"400px\" className=\"rounded-2xl\"/></center>\r\n                    {<span className=\"text-red-700 text-xs\"> {(errs.errimage)?errs.errimage:''}</span>}\r\n                </div>\r\n                <div style={divStyle}></div>\r\n                <Button variant=\"contained\" color=\"secondary\" type=\"submit\">SUBMIT</Button>\r\n                <span className=\"mr-12\">   </span>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={myClickClear} >Clear Form</Button>\r\n            </form>\r\n            <br></br>\r\n        </div>\r\n    );\r\n}\r\nexport default CreateCate;","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Adminstrator\\Cate_manage.js",["169","170","171","172","173","174","175","176","177"],"import Table from '@material-ui/core/Table';\r\nimport React from 'react';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {useState, useEffect} from 'react';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst propTypes = {\r\n    setClickRow: PropTypes.func.isRequired,\r\n    setformData: PropTypes.func.isRequired,\r\n    clickRow: PropTypes.number.isRequired,\r\n    cate: PropTypes.array.isRequired, \r\n    setcate: PropTypes.func.isRequired, \r\n    product: PropTypes.array.isRequired,\r\n};\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    padding: '2px 4px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    width: 400,\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  },\r\n  divider: {\r\n    height: 28,\r\n    margin: 4,\r\n  },\r\n}));\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  });\r\n  function stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n      const order = comparator(a[0], b[0]);\r\n      if (order !== 0) return order;\r\n      return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n  }\r\n  function getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n      ? (a, b) => descendingComparator(a, b, orderBy)\r\n      : (a, b) => -descendingComparator(a, b, orderBy);\r\n  }\r\n\r\n  function descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n\r\n\r\n\r\nfunction Product_manage({ setClickRow, setformData,clickRow, cate, setcate, product }) {\r\n    const Swal = require('sweetalert2');\r\n    const [search, setsearch] = useState(\"\");\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n    const classes = useStyles();\r\n    const classes2 = useStyles2();\r\n    const onClickHanger = (event, value, index) => {\r\n        setClickRow(index);\r\n        setformData(value); // Truyền dữ liệu đẩy lên form\r\n    }\r\n    const Delete = (event,index) => {\r\n        event.stopPropagation();\r\n          Swal.fire({\r\n            title: 'Are you sure you want to delete this record?',\r\n            showDenyButton: true,\r\n            showCancelButton: false,\r\n            confirmButtonText: `Confirm`,\r\n            denyButtonText: `Cancel`,\r\n          }).then( async (result) => {\r\n            /* Read more about isConfirmed, isDenied below */\r\n            if (result.isConfirmed) {\r\n                //-------------------------\r\n                try {\r\n                    const url = `http://localhost:3040/category/${ cate[index].id }`;\r\n                    const response = await axios.delete(url);\r\n                    console.log(response);\r\n                    if (response.status && response.status == 200) {\r\n                        Swal.fire('Deleted!', '', 'success');\r\n                    }\r\n                } catch (error) {\r\n                    console.error(error);\r\n                }\r\n\r\n                setcate(cate=[...cate.slice(0, index),...cate.slice(index+1, cate.length)]);\r\n                \r\n            } \r\n          })\r\n        setClickRow(clickRow=-1);\r\n    }\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n      setRowsPerPage(parseInt(event.target.value, 10));\r\n      setPage(0);\r\n    };\r\n    const handleChangePage = (event, newPage) => {\r\n      setPage(newPage);\r\n    };\r\n    \r\n    const searchChange = (event) => {\r\n        setsearch(event.target.value);\r\n    }\r\n    // đổi Trạng thái hoạt động\r\n    const handleChangeDense = (event, index) => {\r\n      // event.stopPropagation();\r\n      // setDense(event.target.checked);\r\n      const rowUpdate = {...cate[index],status : event.target.checked };\r\n      setformData({\r\n        id: '',\r\n        category_name: '',\r\n        status : true,\r\n        image: '',\r\n      });\r\n      \r\n      Swal.fire({\r\n        title: 'Are you sure you want to change active status of this Category ?',\r\n        showDenyButton: true,\r\n        showCancelButton: false,\r\n        confirmButtonText: `Confirm`,\r\n        denyButtonText: `Cancel`,\r\n      }).then( async (result) => {\r\n        /* Read more about isConfirmed, isDenied below */\r\n        if (result.isConfirmed) {\r\n            //-------------------------\r\n            try {\r\n                const url = `http://localhost:3040/category/${ rowUpdate.id }`;\r\n                const response = await axios.put(url,rowUpdate);\r\n                console.log(response);\r\n                if (response.status && response.status == 200) {\r\n                    Swal.fire('Update successfully!', '', 'success');\r\n                }\r\n                // thay đổi status của sản phẩm thuộc danh mục này\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n            \r\n            setcate(cate=[...cate.slice(0, index),rowUpdate,...cate.slice(index+1, cate.length)]);\r\n            ChangeStatusProductFromCate(cate[index].id, rowUpdate.status);\r\n        } \r\n      })\r\n    };\r\n\r\n    const ChangeStatusProductFromCate = (idCate, statusChange) => {\r\n      // get list product from idcate\r\n      const listProductChange = product.filter( element => element.cate_id == idCate);\r\n      listProductChange.map( async (product, index) => {\r\n        // console.log(product.id);\r\n        try {\r\n          const url = `http://localhost:3040/product/${ product.id }`;\r\n          const response = await axios.put(url,{...product, status: statusChange});\r\n          console.log(response);\r\n          if (response.status && response.status == 200) {\r\n              // Swal.fire(`Update ${index+1} successfully!`, '', 'success');\r\n              // console.log(`Update ${index+1} successfully!`);\r\n          }\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n      })\r\n    }\r\n\r\n    const fitercate = cate.filter( cate => {\r\n        return cate.category_name.toLowerCase().indexOf(search.toLowerCase()) !== -1\r\n    });\r\n    return(\r\n        <div>\r\n            <center>\r\n            <Paper component=\"form\" className={classes2.root}>\r\n            \r\n            <InputBase\r\n                className={classes2.input}\r\n                placeholder=\"Search Product\"\r\n                inputProps={{ 'aria-label': 'search google maps' }}\r\n                onChange={ searchChange }\r\n            />\r\n            <IconButton type=\"submit\" className={classes2.iconButton} aria-label=\"search\" >\r\n                <SearchIcon />\r\n            </IconButton>\r\n            \r\n            </Paper>\r\n            </center>\r\n            <br/>\r\n            <TableContainer component={Paper}>\r\n            <Table className={classes.table} aria-label=\"simple table\">\r\n                <TableHead>\r\n                <TableRow>\r\n                <TableCell align=\"center\">ID</TableCell>\r\n                <TableCell align=\"left\">NAME</TableCell>\r\n                <TableCell align=\"center\">IMAGE</TableCell>\r\n                <TableCell align=\"left\">VISIBLE</TableCell>\r\n                <TableCell align=\"center\">ACTION</TableCell>\r\n                </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                {fitercate\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  return (\r\n                    <TableRow key={index} onClick={event => onClickHanger(event, row, index+ page * rowsPerPage)}> \r\n                        <TableCell align=\"center\">{row.id}</TableCell>\r\n                        <TableCell align=\"left\"> {row.category_name}</TableCell>\r\n                        <TableCell align=\"center\"><center><img src={row.image} className=\"h-16\"/></center></TableCell>\r\n                        <TableCell align=\"left\" >\r\n                        <FormControlLabel\r\n                          control={<Switch checked={row.status} onChange={event => handleChangeDense(event, index+ page * rowsPerPage)} />}\r\n                          label=\"Activate\"\r\n                        />\r\n                        {/* <span className=\"text-green-600\">{(row.status)?\"TRUE\":\"\"}</span><span className=\"text-red-600\">{(row.status)?\"\":\"FALSE\"}</span> */}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                            <Button variant=\"contained\" color=\"secondary\" onClick={event => Delete(event, index+ page * rowsPerPage)}>Delete</Button>\r\n                        </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n                </TableBody>\r\n            </Table>\r\n            <center className=\"text-red-600\">{(fitercate.length == 0)?\"There are no record!\":\"\"}</center>\r\n            <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                component=\"div\"\r\n                count={fitercate.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n            </TableContainer>\r\n            <div className=\"pb-32\"></div>\r\n        </div>\r\n    );\r\n}\r\nexport default Product_manage;\r\nProduct_manage.propTypes = propTypes;","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\AdminOrder.jsx",["178"],"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport {useState, useEffect} from 'react';\r\nimport Orders from './Adminstrator/Order_manage';\r\nimport Container from '@material-ui/core/Container';\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\n\r\n// import { confirmAlert } from 'react-confirm-alert';\r\n\r\n// import Swal from 'sweetalert2/dist/sweetalert2.js';\r\n// import 'sweetalert2/src/sweetalert2.scss'\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  });\r\n\r\n\r\nfunction AdminOrder() {\r\n    \r\n    const initValue = [];\r\n    const [order, setorder] = useState(initValue);\r\n    const [product, setproducts] = useState(initValue);\r\n\r\nuseEffect(() => {\r\n\r\n    async function getorder() {\r\n      const {data} = await axios.get(`http://localhost:3040/order`);\r\n      setorder(data);\r\n    }\r\n    async function getProduct() {\r\n      const {data : x} = await axios.get(\"http://localhost:3040/product\");\r\n      setproducts(x);\r\n      console.log(\"product -----\");\r\n      console.log(x);\r\n    }\r\n    // getProductforkey(search);\r\n    getorder();\r\n    getProduct();\r\n  }, []);\r\n\r\n  \r\n  const divStyle = {\r\n    height: '5px',\r\n    width:'100%',\r\n   };\r\n    return(\r\n        <div>\r\n            <Router>\r\n            <div className=\"h-28\"></div>\r\n            <Container maxWidth=\"md\">\r\n            <div style={divStyle}></div>\r\n            < Orders \r\n                orders = {order}\r\n                product={product}\r\n            />\r\n            </Container>\r\n            </Router>\r\n        </div>\r\n    );\r\n}\r\nexport default AdminOrder;","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Adminstrator\\Order_manage.js",["179","180","181","182","183","184","185","186","187","188","189","190","191","192"],"import Table from '@material-ui/core/Table';\r\nimport React from 'react';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst propTypes = {\r\n    product : PropTypes.array.isRequired,\r\n    orders : PropTypes.array.isRequired,\r\n};\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    padding: '2px 4px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    width: 400,\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  },\r\n  divider: {\r\n    height: 28,\r\n    margin: 4,\r\n  },\r\n}));\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  });\r\n\r\n  function stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n      const order = comparator(a[0], b[0]);\r\n      if (order !== 0) return order;\r\n      return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n  }\r\n  function getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n      ? (a, b) => descendingComparator(a, b, orderBy)\r\n      : (a, b) => -descendingComparator(a, b, orderBy);\r\n  }\r\n\r\n  function descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n\r\nfunction Order_manage({orders, product }) {\r\n    var rs = [];\r\n    const Swal = require('sweetalert2');\r\n    const [search, setsearch] = useState(\"\");\r\n    const [ids, setids] = useState([]);\r\n    const [resultfilter, setresultfilter] = useState([...orders]);\r\n    const [order, setOrder] = React.useState('asc');\r\n    const [orderBy, setOrderBy] = React.useState('calories');\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n    const classes = useStyles();\r\n    const classes2 = useStyles2();\r\n    const [filterStatus, setfilterStatus] = useState(false);\r\n\r\n    // const isSelected = (name) => selected.indexOf(name) !== -1;\r\n    const handleChangePage = (event, newPage) => {\r\n      setPage(newPage);\r\n    };\r\n    \r\n    const handleChangeRowsPerPage = (event) => {\r\n      setRowsPerPage(parseInt(event.target.value, 10));\r\n      setPage(0);\r\n    };\r\n\r\n    const searchChange = (event) => {\r\n        setsearch(event.target.value.trim());\r\n        // list sản phẩm \r\n        const proSearch = product.filter( p => {\r\n            return p.name.toLowerCase().indexOf(event.target.value.trim().toLowerCase()) !== -1;\r\n          }).map( x => x.id );\r\n  \r\n        setids(proSearch); // list id của sản phầm cần tìm hóa đơn\r\n        proSearch.forEach(function(item, index, array) {\r\n          orders.forEach( \r\n            function(or, idx){\r\n              if(or.pro_id == item){\r\n                rs.push(or);\r\n              }\r\n            }\r\n          )\r\n        });\r\n        // console.log(\"Hóa đơn có id sản phẩm trùng id sản phẩm tìm được bằng filter\");\r\n        // console.log(rs);\r\n        setresultfilter(rs);\r\n        setfilterStatus(true);\r\n    }\r\n    \r\n    const foundProductByID = (product, id) => {\r\n      return product.find(x => x.id == id);\r\n    }\r\n  \r\n    // setresultfilter((resultfilter.length != 0)?resultfilter: orders);\r\n\r\n    return(\r\n        <div>\r\n            <center>\r\n            <Paper component=\"form\" className={classes2.root}>\r\n            \r\n            <InputBase\r\n                className={classes2.input}\r\n                placeholder=\"Search Order By Product Name\"\r\n                inputProps={{ 'aria-label': 'search google maps' }}\r\n                onChange={ searchChange }\r\n            />\r\n            <IconButton type=\"submit\" className={classes2.iconButton} aria-label=\"search\" >\r\n                <SearchIcon />\r\n            </IconButton>\r\n            \r\n            </Paper>\r\n            </center>\r\n            <br/>\r\n            <TableContainer component={Paper}>\r\n            <Table className={classes.table} aria-label=\"simple table\">\r\n                <TableHead>\r\n                <TableRow>\r\n                <TableCell align=\"center\">NO.</TableCell>\r\n                <TableCell align=\"left\">PRODUCT</TableCell>\r\n                <TableCell align=\"center\">IMAGE</TableCell>\r\n                <TableCell align=\"left\">TOTAL</TableCell>\r\n                <TableCell align=\"left\">DATE ORDER</TableCell>\r\n                <TableCell align=\"left\">TOTAL MONEY (VNĐ)</TableCell>\r\n                {/* <TableCell align=\"center\">ACTION</TableCell> */}\r\n                </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                {stableSort((filterStatus == true)? resultfilter : orders , getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                //   const isItemSelected = isSelected(row.id);\r\n                //   const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow key={index}> \r\n                      <TableCell align=\"center\">{index+ page * rowsPerPage + 1}</TableCell>\r\n                      <TableCell align=\"left\"> {(foundProductByID(product,row.pro_id))?foundProductByID(product,row.pro_id).name : <span className=\"text-gray-500\">This product does not exist!</span>}</TableCell>\r\n                      <TableCell align=\"center\" >\r\n                        <center>\r\n                          <img \r\n                            src={(foundProductByID(product,row.pro_id))?foundProductByID(product,row.pro_id).image : \"\"} \r\n                            className=\"h-16\"/>\r\n                        </center></TableCell>\r\n                      <TableCell align=\"left\" >{row.total}</TableCell>\r\n                      <TableCell align=\"left\" >{row.date}</TableCell>\r\n                      <TableCell align=\"left\" >{row.total_money.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\")}</TableCell>\r\n                      {/* <TableCell align=\"center\">\r\n                          <Button variant=\"contained\" color=\"secondary\" onClick={event => Delete(event, orders.indexOf(row))}>Delete</Button>\r\n                      </TableCell> */}\r\n                      </TableRow>\r\n              \r\n                  );\r\n                })}\r\n                </TableBody>\r\n            </Table>\r\n            <center className=\"text-red-600\">{((resultfilter.length == 0  && filterStatus == true) || (orders.length == 0))?\"There are no record!\":\"\"}</center>\r\n            <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                component=\"div\"\r\n                count={(filterStatus == true)? resultfilter.length : orders.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n            </TableContainer>\r\n            <div className=\"pb-32\"></div>\r\n        </div>\r\n    );\r\n}\r\nexport default Order_manage;\r\nOrder_manage.propTypes = propTypes;","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Cart\\Cart.js",["193","194"],"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport {useState, useEffect} from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport Cart_manage from './Cart_manage';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst propTypes = {\r\n    cart : PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id : PropTypes.number.isRequired,\r\n            amount : PropTypes.number.isRequired\r\n        })\r\n    ).isRequired, // cart nhan vao phai la array .isRequied la yeu cau phai co\r\n    setcart : PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nfunction Cart({cart, setcart}) {\r\n    \r\n    const initValue = [];\r\n    const [order, setorder] = useState(initValue);\r\n    const [product, setproducts] = useState(initValue);\r\n\r\nuseEffect(() => {\r\n\r\n    // async function getcart() {\r\n    //   const {data} = await axios.get(`http://localhost:3040/cart`);\r\n    //   console.log(data);\r\n    //   setcart(data);\r\n      \r\n    // }\r\n    async function getProduct() {\r\n        const {data : x} = await axios.get(\"http://localhost:3040/product\");\r\n        setproducts(x);\r\n        console.log(\"product -----\");\r\n        console.log(x);\r\n      }\r\n\r\n    async function getorder() {\r\n        const {data} = await axios.get(`http://localhost:3040/order`);\r\n        setorder(data);\r\n      }\r\n    // getProductforkey(search);\r\n    getProduct();\r\n    getorder();\r\n  }, []);\r\n\r\n  \r\n  const divStyle = {\r\n    height: '5px',\r\n    width:'100%',\r\n   };\r\n    return(\r\n        <div>\r\n            <Router>\r\n            <div className=\"h-28\"></div>\r\n            <Container maxWidth=\"md\">\r\n                <ShoppingCartIcon style={{ fontSize: 100 }} color=\"secondary\"/>\r\n                \r\n                <div style={divStyle}></div>\r\n                <Cart_manage \r\n                    cart ={cart}\r\n                    setcart = {setcart}\r\n                    product={product}\r\n                    order = {order}\r\n                    setorder = {setorder}\r\n                />\r\n            </Container>\r\n            {/* <Route path=\"/admin\" component={Admin}/>\r\n          <Route path=\"/\" component={Home} exact={true}/> */}\r\n            </Router>\r\n        </div>\r\n    );\r\n}\r\nexport default Cart;\r\nCart.propTypes = propTypes;","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\Cart\\Cart_manage.js",["195","196","197","198","199"],"import Table from '@material-ui/core/Table';\r\nimport React from 'react';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios';\r\n// import Input from '@material-ui/core/Input';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {useState, useEffect} from 'react';\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  });\r\n  \r\n\r\nfunction Cart_manage({cart, setcart, product }) {\r\n    var today = new Date();\r\n    var curentdate = today.getDate()+'/'+(today.getMonth()+1)+'/'+today.getFullYear();\r\n    const Swal = require('sweetalert2');\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n    const classes = useStyles();\r\n    \r\n    const Delete = (event,index) => {\r\n        event.stopPropagation();\r\n          Swal.fire({\r\n            title: 'Are you sure you want to delete this record?',\r\n            showDenyButton: true,\r\n            showCancelButton: false,\r\n            confirmButtonText: `Confirm`,\r\n            denyButtonText: `Cancel`,\r\n          }).then( async (result) => {\r\n            /* Read more about isConfirmed, isDenied below */\r\n            if (result.isConfirmed) {\r\n                //-------------------------\r\n                try {\r\n                    const url = `http://localhost:3040/cart/${ cart[index].id }`;\r\n                    const response = await axios.delete(url);\r\n                    console.log(response);\r\n                    if (response.status && response.status === 200) {\r\n                        Swal.fire('Deleted!', '', 'success');\r\n                    }\r\n                } catch (error) {\r\n                    console.error(error);\r\n                }\r\n                setcart(cart=[...cart.slice(0, index),...cart.slice(index+1, cart.length)]);\r\n            } \r\n          })\r\n        // setClickRow(clickRow=-1);\r\n    }\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n      setRowsPerPage(parseInt(event.target.value, 10));\r\n      setPage(0);\r\n    };\r\n    const handleChangePage = (event, newPage) => {\r\n      setPage(newPage);\r\n    };\r\n    \r\n    const foundProductByID = (product, id) => {\r\n        return product.find(x => x.id == id);\r\n    }\r\n    const addAmount = (index) => {\r\n        // console.log(cart[index].amount+1);\r\n        const curentRow = cart[index];\r\n        setcart(cart=[...cart.slice(0, index),{...curentRow,amount:cart[index].amount+1}, ...cart.slice(index+1, cart.length)]);\r\n    }\r\n    const MinusAmount = (index) => {\r\n        // console.log(cart[index].amount-1);\r\n        if(cart[index].amount-1 > 0){\r\n            const curentRow = cart[index];\r\n            setcart(cart=[...cart.slice(0, index),{...curentRow,amount:cart[index].amount-1}, ...cart.slice(index+1, cart.length)]);\r\n        }\r\n    }\r\n    let TongTien = 0;\r\n    \r\n    const pushOrder = async (dataPush) => {\r\n        try {\r\n            const response = await axios({\r\n                method:'POST',\r\n                url: \"http://localhost:3040/order\",\r\n                data: dataPush,\r\n            });\r\n            if(response.status && response.status == 201){\r\n                // console.log(response);\r\n                // setorder(order=[...order, response.data]); \r\n            }\r\n        } catch (error) {\r\n            console.error(error)\r\n        }\r\n    }\r\n\r\n    const deleteCart = async (id) => {\r\n        try {\r\n            const url = `http://localhost:3040/cart/${ id }`;\r\n            const response = await axios.delete(url);\r\n            // console.log(response);\r\n            if (response.status && response.status === 200) {\r\n                // console.log(\"delete xong id = \"+ id);\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n   \r\n    const BUY = (event) => {\r\n        Swal.fire({\r\n            title: `Are you sure you want to pay ${TongTien} for all products?`,\r\n            showDenyButton: true,\r\n            showCancelButton: false,\r\n            confirmButtonText: `Confirm`,\r\n            denyButtonText: `Cancel`,\r\n          }).then( (result) => {\r\n            /* Read more about isConfirmed, isDenied below */\r\n            if (result.isConfirmed) { // nếu đồng ý mua\r\n                //--------------Thêm vào Order -----------------\r\n                // const maxID = Math.max.apply(Math, order.map(x => x.id));\r\n                cart.forEach(bill => {\r\n                    pushOrder({\r\n                        id: '',\r\n                        pro_id: bill.id,\r\n                        total: bill.amount,\r\n                        date: curentdate,\r\n                        total_money: foundProductByID(product,bill.id).price*bill.amount\r\n                    });\r\n                    deleteCart(bill.id);\r\n                });\r\n                Swal.fire('Buy!', '', 'success');\r\n                setcart([]);\r\n            } \r\n          })\r\n    }\r\n    return(\r\n        <div>\r\n            <TableContainer component={Paper}>\r\n            <Table className={classes.table} aria-label=\"simple table\">\r\n                <TableHead>\r\n                <TableRow>\r\n                <TableCell align=\"center\">NO.</TableCell>\r\n                <TableCell align=\"center\">PRODUCT</TableCell>\r\n                <TableCell align=\"center\">PRICE</TableCell>\r\n                <TableCell align=\"center\">AMOUNT</TableCell>\r\n                <TableCell align=\"center\">TOTAL MONEY</TableCell>\r\n                <TableCell align=\"center\">ACTION</TableCell>\r\n                </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                {cart\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  // const isItemSelected = isSelected(row.id);\r\n                  // const labelId = `enhanced-table-checkbox-${index}`;\r\n                    TongTien+= (foundProductByID(product,row.id))?foundProductByID(product,row.id).price*row.amount : 0;\r\n                  return (\r\n                    <TableRow key={index} > \r\n                        <TableCell align=\"center\">{page * rowsPerPage + index +1}</TableCell>\r\n                        {/* <TableCell align=\"center\">{row.id}</TableCell> */}\r\n                        <TableCell align=\"center\"> \r\n                            <div>\r\n                                <center><img className=\"w-20\" src={(foundProductByID(product,row.id))?foundProductByID(product,row.id).image : \"\"}/></center>\r\n                                {(foundProductByID(product,row.id))?foundProductByID(product,row.id).name : \"Sản Phẩm không tồn tại\"}\r\n                            </div>\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">{(foundProductByID(product,row.id))?foundProductByID(product,row.id).price*1 : \"0\"}</TableCell>\r\n                        <TableCell align=\"center\" >\r\n                            <Button startIcon={<RemoveIcon/>} color=\"secondary\" onClick = { event => MinusAmount(index)}/>\r\n                            <p className=\"inline-block p-2\">{row.amount}</p>\r\n                            <Button color=\"secondary\" startIcon={<AddIcon/>} onClick={ event => addAmount(index) }/>\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                            {(foundProductByID(product,row.id))\r\n                            ?(foundProductByID(product,row.id).price*row.amount).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\")\r\n                            : \"0\"}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                            <Button variant=\"contained\" color=\"secondary\" onClick={event => Delete(event, index)}>Delete</Button>\r\n                        </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n                <TableRow key={cart.length} > \r\n                        <TableCell align=\"right\" colSpan=\"4\">\r\n                            Tổng Tiền  = \r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                            {TongTien.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\") }\r\n                        </TableCell>      \r\n                        <TableCell align=\"center\">\r\n                            <Button variant=\"contained\" color=\"secondary\" onClick={(event) => BUY(event)}>BUY</Button>\r\n                        </TableCell>\r\n                    </TableRow>\r\n                </TableBody>\r\n            </Table>\r\n            <center className=\"text-red-600\">{(cart.length === 0)?\"There are no record!\":\"\"}</center>\r\n            <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                component=\"div\"\r\n                count={cart.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n            </TableContainer>\r\n            <div className=\"pb-32\"></div>\r\n        </div>\r\n    );\r\n}\r\nexport default Cart_manage;","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\ProductByCate.js",["200","201","202","203","204","205"],"import React from 'react'\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\nimport { Button } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst propTypes = {\r\n    cart : PropTypes.array.isRequired,\r\n    cateView : PropTypes.object.isRequired\r\n};\r\n\r\nfunction ProductByCate({cart, cateView}) {\r\n    const [productBycate, setproductBycate] = useState([]);\r\n    useEffect(() => {\r\n        async function getproductbyCateID(cateID) {\r\n            const url = `http://localhost:3040/product?cate_id_like=${ cateID }&status=true`;\r\n            const {data} = await axios.get(url);\r\n            console.log(data);\r\n            setproductBycate(data);\r\n          }\r\n          getproductbyCateID(cateView.id);\r\n        \r\n    }, []);\r\n    const createNotification = (type) => {\r\n        return () => {\r\n          switch (type) {\r\n            case 'info':\r\n              NotificationManager.info('Info message');\r\n              break;\r\n            case 'success':\r\n              NotificationManager.success('Success ', 'Add To Card');\r\n              break;\r\n            case 'warning':\r\n              NotificationManager.warning('Warning message', 'Close after 3000ms', 3000);\r\n              break;\r\n            case 'error':\r\n              NotificationManager.error('Error message', 'Click me!', 5000, () => {\r\n                alert('callback');\r\n              });\r\n              break;\r\n          }\r\n        };\r\n      };\r\n    \r\n      const addToCart = async (event ,product) => {\r\n        // console.log(event.target);\r\n        // console.log(product);\r\n        if(cart.map( c => c.id).indexOf(product.id) != -1){ \r\n            console.log(\"đã tồn tại\");\r\n        }else{\r\n            console.log(\"chưa tồn tại\");\r\n            console.log(cart.map( c => c.id));\r\n            console.log(\"pro_id---\"+product.id);\r\n            console.log(\"kq---:  \"+cart.map( c => c.id).indexOf(product.id));\r\n            try {\r\n                const url = \"http://localhost:3040/cart\";\r\n                const response = await axios({\r\n                    method:'POST',\r\n                    url: url,\r\n                    data: {\r\n                        id: product.id,\r\n                        amount: 1,\r\n                    },\r\n                });\r\n                if(response.status && response.status == 201){\r\n                    console.log(response);\r\n                    console.log(\"thêm thành công rồi này\");\r\n                    // setcart(...cart, response.data);\r\n                }\r\n            } catch (error) {\r\n                console.error(error)\r\n            }\r\n        }\r\n        \r\n    }\r\n    // console.log(\"đồng hồ nam\"+productsNam);\r\n    const aStyle1 = {\r\n        display: \"block\",\r\n        overflow: \"hidden\",\r\n        padding: \"5px 10px\",\r\n        border: \"1px solid #fff\",\r\n        float: \"right\",\r\n    }\r\n    const aStyle2 = {\r\n        display: \"block\",\r\n        overflow: \"hidden\",\r\n        padding: \"5px 10px\",\r\n        border: \"1px solid black\",\r\n        float: \"right\",\r\n    }\r\n    return (\r\n        <div>\r\n            <div class=\"w-4/5 mx-auto mt-20\">\r\n                <h1 class=\"text-center font-bold text-2xl \">{cateView.category_name.toUpperCase()}</h1>\r\n                <div class=\"grid lg:grid-cols-4  border-t border-gray mt-2 pt-10 relative\">\r\n                    <div class=\" lg:col-span-3 mx-auto grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-3 items-center text-center\">\r\n                    {productBycate.map((x, index) => \r\n                        (\r\n                            <div className=\" border border-gray-400 rounded-lg px-1 py-3\" key={index}>\r\n                                <div className=\"w-4/5 mx-auto my-1 \">\r\n                                    <img className=\"transition delay-750 duration-700 ease-in-out transform hover:scale-110\" src={x.image} alt=\"\"/>\r\n                                </div>\r\n                                <div className=\"\">\r\n                                    <p>{x.name}</p>\r\n                                </div>\r\n                                <div className=\"text-gray-500 text-xs\">\r\n                                    <span>{x.description}</span>\r\n                                </div>\r\n                                <div className=\"font-bold text-red-800\">\r\n                                    <p>{x.price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\")}$</p>\r\n                                </div>\r\n                                <div onClick={createNotification('success')}>\r\n                                    <Button startIcon={<AddShoppingCartIcon/>} color=\"secondary\" onClick={event => addToCart(event, x) }> Add to cart </Button>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    )}\r\n                    <NotificationContainer/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\nexport default ProductByCate;\r\nProductByCate.propTypes = propTypes;","C:\\Users\\ASUS\\OneDrive\\Máy tính\\web207\\myasmweb207\\src\\Components\\AllProducts.jsx",["206","207","208","209","210"],"import React from 'react'\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\nimport { Button } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst propTypes = {\r\n    cart : PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id : PropTypes.number.isRequired,\r\n            amount : PropTypes.number.isRequired\r\n        })\r\n    ).isRequired, // cart nhan vao phai la array .isRequied la yeu cau phai co\r\n    setcart : PropTypes.func.isRequired,\r\n};\r\n\r\nfunction AllProducts({cart, setcart}) {\r\n    const [product, setproduct] = useState([]);\r\n    useEffect(() => {\r\n        async function getproductbyCateID() {\r\n            const url = `http://localhost:3040/product?status=true`;\r\n            const {data} = await axios.get(url);\r\n            console.log(data);\r\n            setproduct(data);\r\n          }\r\n          getproductbyCateID();\r\n        \r\n    }, []);\r\n    const createNotification = (type) => {\r\n        return () => {\r\n          switch (type) {\r\n            case 'info':\r\n              NotificationManager.info('Info message');\r\n              break;\r\n            case 'success':\r\n              NotificationManager.success('Success ', 'Add To Card');\r\n              break;\r\n            case 'warning':\r\n              NotificationManager.warning('Warning message', 'Close after 3000ms', 3000);\r\n              break;\r\n            case 'error':\r\n              NotificationManager.error('Error message', 'Click me!', 5000, () => {\r\n                alert('callback');\r\n              });\r\n              break;\r\n          }\r\n        };\r\n      };\r\n    \r\n      const addToCart = async (event ,product) => {\r\n        // console.log(event.target);\r\n        // console.log(product);\r\n        if(cart.map( c => c.id).indexOf(product.id) != -1){ \r\n            console.log(\"đã tồn tại\");\r\n        }else{\r\n            console.log(\"chưa tồn tại\");\r\n            console.log(cart.map( c => c.id));\r\n            console.log(\"pro_id---\"+product.id);\r\n            console.log(\"kq---:  \"+cart.map( c => c.id).indexOf(product.id));\r\n            try {\r\n                const url = \"http://localhost:3040/cart\";\r\n                const response = await axios({\r\n                    method:'POST',\r\n                    url: url,\r\n                    data: {\r\n                        id: product.id,\r\n                        amount: 1,\r\n                    },\r\n                });\r\n                if(response.status && response.status == 201){\r\n                    console.log(response);\r\n                    console.log(\"thêm thành công rồi này\");\r\n                    console.log([...cart, response.data]);\r\n                    setcart([...cart, response.data]);\r\n\r\n                }\r\n            } catch (error) {\r\n                console.error(error)\r\n            }\r\n        }\r\n        \r\n    }\r\n    // console.log(\"đồng hồ nam\"+productsNam);\r\n    const aStyle1 = {\r\n        display: \"block\",\r\n        overflow: \"hidden\",\r\n        padding: \"5px 10px\",\r\n        border: \"1px solid #fff\",\r\n        float: \"right\",\r\n    }\r\n    const aStyle2 = {\r\n        display: \"block\",\r\n        overflow: \"hidden\",\r\n        padding: \"5px 10px\",\r\n        border: \"1px solid black\",\r\n        float: \"right\",\r\n    }\r\n    return (\r\n        <div>\r\n            <div class=\"w-4/5 mx-auto \">\r\n            <div className=\"h-32\"></div>\r\n                <h1 class=\"text-center font-bold text-2xl\">ALL PPRODUCTS</h1>\r\n                <div class=\"grid lg:grid-cols-4  border-t border-gray mt-2 pt-10 relative\">\r\n                    <div class=\" lg:col-span-4 mx-auto grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-3 items-center text-center\">\r\n                    {product.map((x, index) => \r\n                        (\r\n                            <div className=\" border border-gray-400 rounded-lg px-1 py-3\" key={index}>\r\n                                <div className=\"w-11/12 mx-auto my-1 \">\r\n                                    <img className=\"transition delay-750 duration-700 ease-in-out transform hover:scale-110\" style={{height:\"228px\"}} src={x.image} alt=\"\"/>\r\n                                </div>\r\n                                <div className=\"\">\r\n                                    <p>{x.name}</p>\r\n                                </div>\r\n                                <div className=\"text-gray-500 text-xs\">\r\n                                    <span>{x.description}</span>\r\n                                </div>\r\n                                <div className=\"font-bold text-red-800\">\r\n                                    <p>{x.price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\")}$</p>\r\n                                </div>\r\n                                <div onClick={createNotification('success')}>\r\n                                    <Button startIcon={<AddShoppingCartIcon/>} color=\"secondary\" onClick={event => addToCart(event, x) }> Add to cart </Button>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    )}\r\n                    <NotificationContainer/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\nexport default AllProducts;\r\nAllProducts.propTypes = propTypes;",{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","severity":1,"message":"216","line":6,"column":9,"nodeType":"217","messageId":"218","endLine":6,"endColumn":17},{"ruleId":"215","severity":1,"message":"219","line":6,"column":19,"nodeType":"217","messageId":"218","endLine":6,"endColumn":28},{"ruleId":"220","severity":1,"message":"221","line":14,"column":11,"nodeType":"222","messageId":"223","endLine":29,"endColumn":12},{"ruleId":"224","severity":1,"message":"225","line":36,"column":53,"nodeType":"226","messageId":"227","endLine":36,"endColumn":55},{"ruleId":"224","severity":1,"message":"228","line":53,"column":55,"nodeType":"226","messageId":"227","endLine":53,"endColumn":57},{"ruleId":"215","severity":1,"message":"229","line":9,"column":42,"nodeType":"217","messageId":"218","endLine":9,"endColumn":46},{"ruleId":"215","severity":1,"message":"230","line":17,"column":20,"nodeType":"217","messageId":"218","endLine":17,"endColumn":31},{"ruleId":"211","replacedBy":"231"},{"ruleId":"213","replacedBy":"232"},{"ruleId":"215","severity":1,"message":"219","line":18,"column":19,"nodeType":"217","messageId":"218","endLine":18,"endColumn":28},{"ruleId":"215","severity":1,"message":"233","line":21,"column":7,"nodeType":"217","messageId":"218","endLine":21,"endColumn":16},{"ruleId":"224","severity":1,"message":"228","line":94,"column":60,"nodeType":"226","messageId":"227","endLine":94,"endColumn":62},{"ruleId":"224","severity":1,"message":"228","line":120,"column":36,"nodeType":"226","messageId":"227","endLine":120,"endColumn":38},{"ruleId":"224","severity":1,"message":"228","line":161,"column":56,"nodeType":"226","messageId":"227","endLine":161,"endColumn":58},{"ruleId":"234","severity":1,"message":"235","line":220,"column":58,"nodeType":"236","endLine":220,"endColumn":97},{"ruleId":"224","severity":1,"message":"228","line":242,"column":68,"nodeType":"226","messageId":"227","endLine":242,"endColumn":70},{"ruleId":"224","severity":1,"message":"228","line":43,"column":38,"nodeType":"226","messageId":"227","endLine":43,"endColumn":40},{"ruleId":"215","severity":1,"message":"237","line":50,"column":12,"nodeType":"217","messageId":"218","endLine":50,"endColumn":22},{"ruleId":"224","severity":1,"message":"228","line":71,"column":32,"nodeType":"226","messageId":"227","endLine":71,"endColumn":34},{"ruleId":"224","severity":1,"message":"228","line":72,"column":32,"nodeType":"226","messageId":"227","endLine":72,"endColumn":34},{"ruleId":"224","severity":1,"message":"228","line":73,"column":33,"nodeType":"226","messageId":"227","endLine":73,"endColumn":35},{"ruleId":"224","severity":1,"message":"228","line":74,"column":33,"nodeType":"226","messageId":"227","endLine":74,"endColumn":35},{"ruleId":"224","severity":1,"message":"228","line":75,"column":39,"nodeType":"226","messageId":"227","endLine":75,"endColumn":41},{"ruleId":"224","severity":1,"message":"228","line":76,"column":36,"nodeType":"226","messageId":"227","endLine":76,"endColumn":38},{"ruleId":"224","severity":1,"message":"225","line":78,"column":29,"nodeType":"226","messageId":"227","endLine":78,"endColumn":31},{"ruleId":"224","severity":1,"message":"228","line":86,"column":63,"nodeType":"226","messageId":"227","endLine":86,"endColumn":65},{"ruleId":"224","severity":1,"message":"228","line":106,"column":63,"nodeType":"226","messageId":"227","endLine":106,"endColumn":65},{"ruleId":"224","severity":1,"message":"228","line":125,"column":36,"nodeType":"226","messageId":"227","endLine":125,"endColumn":38},{"ruleId":"224","severity":1,"message":"228","line":128,"column":43,"nodeType":"226","messageId":"227","endLine":128,"endColumn":45},{"ruleId":"224","severity":1,"message":"228","line":134,"column":30,"nodeType":"226","messageId":"227","endLine":134,"endColumn":32},{"ruleId":"224","severity":1,"message":"225","line":136,"column":31,"nodeType":"226","messageId":"227","endLine":136,"endColumn":33},{"ruleId":"224","severity":1,"message":"228","line":141,"column":33,"nodeType":"226","messageId":"227","endLine":141,"endColumn":35},{"ruleId":"224","severity":1,"message":"225","line":143,"column":34,"nodeType":"226","messageId":"227","endLine":143,"endColumn":36},{"ruleId":"224","severity":1,"message":"228","line":148,"column":30,"nodeType":"226","messageId":"227","endLine":148,"endColumn":32},{"ruleId":"224","severity":1,"message":"228","line":151,"column":32,"nodeType":"226","messageId":"227","endLine":151,"endColumn":34},{"ruleId":"234","severity":1,"message":"235","line":277,"column":33,"nodeType":"236","endLine":277,"endColumn":98},{"ruleId":"215","severity":1,"message":"238","line":9,"column":8,"nodeType":"217","messageId":"218","endLine":9,"endColumn":24},{"ruleId":"215","severity":1,"message":"239","line":10,"column":8,"nodeType":"217","messageId":"218","endLine":10,"endColumn":30},{"ruleId":"215","severity":1,"message":"240","line":11,"column":8,"nodeType":"217","messageId":"218","endLine":11,"endColumn":31},{"ruleId":"215","severity":1,"message":"241","line":12,"column":8,"nodeType":"217","messageId":"218","endLine":12,"endColumn":17},{"ruleId":"215","severity":1,"message":"242","line":13,"column":8,"nodeType":"217","messageId":"218","endLine":13,"endColumn":20},{"ruleId":"215","severity":1,"message":"243","line":14,"column":27,"nodeType":"217","messageId":"218","endLine":14,"endColumn":33},{"ruleId":"215","severity":1,"message":"244","line":14,"column":35,"nodeType":"217","messageId":"218","endLine":14,"endColumn":40},{"ruleId":"215","severity":1,"message":"229","line":14,"column":42,"nodeType":"217","messageId":"218","endLine":14,"endColumn":46},{"ruleId":"215","severity":1,"message":"245","line":63,"column":9,"nodeType":"217","messageId":"218","endLine":63,"endColumn":16},{"ruleId":"215","severity":1,"message":"246","line":64,"column":10,"nodeType":"217","messageId":"218","endLine":64,"endColumn":15},{"ruleId":"215","severity":1,"message":"247","line":64,"column":17,"nodeType":"217","messageId":"218","endLine":64,"endColumn":25},{"ruleId":"215","severity":1,"message":"248","line":15,"column":7,"nodeType":"217","messageId":"218","endLine":15,"endColumn":16},{"ruleId":"224","severity":1,"message":"228","line":18,"column":45,"nodeType":"226","messageId":"227","endLine":18,"endColumn":47},{"ruleId":"224","severity":1,"message":"228","line":21,"column":30,"nodeType":"226","messageId":"227","endLine":21,"endColumn":32},{"ruleId":"224","severity":1,"message":"228","line":30,"column":32,"nodeType":"226","messageId":"227","endLine":30,"endColumn":34},{"ruleId":"224","severity":1,"message":"228","line":31,"column":33,"nodeType":"226","messageId":"227","endLine":31,"endColumn":35},{"ruleId":"224","severity":1,"message":"225","line":33,"column":25,"nodeType":"226","messageId":"227","endLine":33,"endColumn":27},{"ruleId":"224","severity":1,"message":"228","line":45,"column":59,"nodeType":"226","messageId":"227","endLine":45,"endColumn":61},{"ruleId":"224","severity":1,"message":"228","line":63,"column":59,"nodeType":"226","messageId":"227","endLine":63,"endColumn":61},{"ruleId":"234","severity":1,"message":"235","line":138,"column":29,"nodeType":"236","endLine":138,"endColumn":94},{"ruleId":"215","severity":1,"message":"219","line":16,"column":19,"nodeType":"217","messageId":"218","endLine":16,"endColumn":28},{"ruleId":"215","severity":1,"message":"249","line":55,"column":12,"nodeType":"217","messageId":"218","endLine":55,"endColumn":22},{"ruleId":"215","severity":1,"message":"250","line":64,"column":12,"nodeType":"217","messageId":"218","endLine":64,"endColumn":25},{"ruleId":"224","severity":1,"message":"228","line":110,"column":60,"nodeType":"226","messageId":"227","endLine":110,"endColumn":62},{"ruleId":"224","severity":1,"message":"228","line":161,"column":56,"nodeType":"226","messageId":"227","endLine":161,"endColumn":58},{"ruleId":"224","severity":1,"message":"228","line":177,"column":76,"nodeType":"226","messageId":"227","endLine":177,"endColumn":78},{"ruleId":"224","severity":1,"message":"228","line":184,"column":50,"nodeType":"226","messageId":"227","endLine":184,"endColumn":52},{"ruleId":"234","severity":1,"message":"235","line":234,"column":59,"nodeType":"236","endLine":234,"endColumn":98},{"ruleId":"224","severity":1,"message":"228","line":250,"column":65,"nodeType":"226","messageId":"227","endLine":250,"endColumn":67},{"ruleId":"215","severity":1,"message":"248","line":16,"column":7,"nodeType":"217","messageId":"218","endLine":16,"endColumn":16},{"ruleId":"215","severity":1,"message":"219","line":14,"column":19,"nodeType":"217","messageId":"218","endLine":14,"endColumn":28},{"ruleId":"215","severity":1,"message":"251","line":77,"column":11,"nodeType":"217","messageId":"218","endLine":77,"endColumn":15},{"ruleId":"215","severity":1,"message":"252","line":78,"column":12,"nodeType":"217","messageId":"218","endLine":78,"endColumn":18},{"ruleId":"215","severity":1,"message":"253","line":79,"column":12,"nodeType":"217","messageId":"218","endLine":79,"endColumn":15},{"ruleId":"215","severity":1,"message":"254","line":81,"column":19,"nodeType":"217","messageId":"218","endLine":81,"endColumn":27},{"ruleId":"215","severity":1,"message":"255","line":82,"column":21,"nodeType":"217","messageId":"218","endLine":82,"endColumn":31},{"ruleId":"224","severity":1,"message":"228","line":110,"column":28,"nodeType":"226","messageId":"227","endLine":110,"endColumn":30},{"ruleId":"224","severity":1,"message":"228","line":123,"column":37,"nodeType":"226","messageId":"227","endLine":123,"endColumn":39},{"ruleId":"224","severity":1,"message":"228","line":160,"column":43,"nodeType":"226","messageId":"227","endLine":160,"endColumn":45},{"ruleId":"234","severity":1,"message":"235","line":172,"column":27,"nodeType":"236","endLine":174,"endColumn":47},{"ruleId":"224","severity":1,"message":"228","line":188,"column":69,"nodeType":"226","messageId":"227","endLine":188,"endColumn":71},{"ruleId":"224","severity":1,"message":"228","line":188,"column":91,"nodeType":"226","messageId":"227","endLine":188,"endColumn":93},{"ruleId":"224","severity":1,"message":"228","line":188,"column":118,"nodeType":"226","messageId":"227","endLine":188,"endColumn":120},{"ruleId":"224","severity":1,"message":"228","line":192,"column":38,"nodeType":"226","messageId":"227","endLine":192,"endColumn":40},{"ruleId":"215","severity":1,"message":"256","line":2,"column":10,"nodeType":"217","messageId":"218","endLine":2,"endColumn":20},{"ruleId":"257","severity":1,"message":"258","line":66,"column":17,"nodeType":"236","endLine":72,"endColumn":19},{"ruleId":"215","severity":1,"message":"216","line":16,"column":9,"nodeType":"217","messageId":"218","endLine":16,"endColumn":17},{"ruleId":"215","severity":1,"message":"219","line":16,"column":19,"nodeType":"217","messageId":"218","endLine":16,"endColumn":28},{"ruleId":"224","severity":1,"message":"228","line":70,"column":39,"nodeType":"226","messageId":"227","endLine":70,"endColumn":41},{"ruleId":"224","severity":1,"message":"228","line":93,"column":51,"nodeType":"226","messageId":"227","endLine":93,"endColumn":53},{"ruleId":"234","severity":1,"message":"235","line":170,"column":41,"nodeType":"236","endLine":170,"endColumn":149},{"ruleId":"259","severity":1,"message":"260","line":26,"column":8,"nodeType":"261","endLine":26,"endColumn":10,"suggestions":"262"},{"ruleId":"220","severity":1,"message":"221","line":29,"column":11,"nodeType":"222","messageId":"223","endLine":44,"endColumn":12},{"ruleId":"224","severity":1,"message":"225","line":51,"column":53,"nodeType":"226","messageId":"227","endLine":51,"endColumn":55},{"ruleId":"224","severity":1,"message":"228","line":68,"column":55,"nodeType":"226","messageId":"227","endLine":68,"endColumn":57},{"ruleId":"215","severity":1,"message":"263","line":80,"column":11,"nodeType":"217","messageId":"218","endLine":80,"endColumn":18},{"ruleId":"215","severity":1,"message":"264","line":87,"column":11,"nodeType":"217","messageId":"218","endLine":87,"endColumn":18},{"ruleId":"220","severity":1,"message":"221","line":34,"column":11,"nodeType":"222","messageId":"223","endLine":49,"endColumn":12},{"ruleId":"224","severity":1,"message":"225","line":56,"column":53,"nodeType":"226","messageId":"227","endLine":56,"endColumn":55},{"ruleId":"224","severity":1,"message":"228","line":73,"column":55,"nodeType":"226","messageId":"227","endLine":73,"endColumn":57},{"ruleId":"215","severity":1,"message":"263","line":87,"column":11,"nodeType":"217","messageId":"218","endLine":87,"endColumn":18},{"ruleId":"215","severity":1,"message":"264","line":94,"column":11,"nodeType":"217","messageId":"218","endLine":94,"endColumn":18},"no-native-reassign",["265"],"no-negated-in-lhs",["266"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'Link' is defined but never used.","'setformData' is assigned a value but never used.",["265"],["266"],"'propTypes' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'fileUpload' is assigned a value but never used.","'BottomNavigation' is defined but never used.","'BottomNavigationAction' is defined but never used.","'CollectionsBookmarkIcon' is defined but never used.","'WatchIcon' is defined but never used.","'FileCopyIcon' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'classes' is assigned a value but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'useStyles' is assigned a value but never used.","'stableSort' is defined but never used.","'getComparator' is defined but never used.","'Swal' is assigned a value but never used.","'search' is assigned a value but never used.","'ids' is assigned a value but never used.","'setOrder' is assigned a value but never used.","'setOrderBy' is assigned a value but never used.","'makeStyles' is defined but never used.","react/jsx-pascal-case","Imported JSX component Cart_manage must be in PascalCase or SCREAMING_SNAKE_CASE","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cateView.id'. Either include it or remove the dependency array.","ArrayExpression",["267"],"'aStyle1' is assigned a value but never used.","'aStyle2' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"268","fix":"269"},"Update the dependencies array to be: [cateView.id]",{"range":"270","text":"271"},[968,970],"[cateView.id]"]